{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","DataImport.js","literalMapping.js","DataClassifyDialog.js","DataClassifyView.js","DataLinkDialog.js","DataLinkView.js","GraphContextForm.js","DownloadView.js","dataprocessing.js","DataCreation.js","Tutorialised.js","TripleVisualizer.js","DataBrowser.js","querybuilder.js","SparqlVisualizer.js","QueryWriter.js","App.jsx","index.js","registerServiceWorker.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","styles","button","margin","exampleImageInput","cursor","position","top","bottom","right","left","width","opacity","TableView","props","data","length","react_default","a","createElement","Table","className","bodyStyle","tableLayout","overflowY","overflowX","headerStyle","OverflowX","wrapperStyle","display","maxHeight","adjustForCheckbox","displaySelectAll","key","style","x","maxWidth","displayRowCheckbox","slice","row","index","marginLeft","marginRight","ImportView","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","import_file","selectedFile","handleFileChange","bind","assertThisInitialized","event","_this2","reader","FileReader","target","files","setState","setData","name","split","pop","filename","addEventListener","Baby","parse","result","readAsText","_this3","toContinue","Paper_default","zDepth","FlatButton_default","label","labelPosition","containerElement","TextField_default","disabled","hintText","accept","type","onChange","float","onClick","undefined","pageFunction","renderTable","Component","defaultProps","mappings","description","uri","variableToAdd","DataClassifyDialog","onVocabPicked","_","vocabPickerIndex","searchVocabulary","query","searchText","tempState","preventDefault","fetch","concat","then","response","ok","json","results","item","vocabPrefix","prefix","prefixedName","error","lovAvailable","catch","ex","statusText","console","handlePick","columnName","toLowerCase","replace","vocabDownText","finishCallBack","baseUri","resetDialog","stepIndex","index_es","onUriChange","column","value","primaryText","openImmediately","exampleValue","string","onSubmit","errorText","svg_icons","renderDialogTableBody","actions","primary","closeCallBack","modal","open","activeStep","renderDialogBody","DataClassifyView","onBaseUriChange","text","setBaseUri","dialog","onTagChange","tagDialog","onDialogUriChange","uriDialog","getAmountOfClasses","classes","counter","i","handleOpen","handleColumnChange","setLiteralType","classification","setClass","setUri","nextPage","tagActions","uriActions","continueDisabled","toNextPage","selectable","tooltip","Checkbox_default","checked","onCheck","startClassification","class","floatingLabelText","valueType","idx","literalMap","litDescr","MenuItem_default","IconButton_default","resetItem","arrow_back_default","src_DataClassifyDialog","Dialog_default","DataLinkDialog","object","newEdge","source","relation","r","title","link","finishDialog","closeDialog","doNothing","GraphConfig","NodeTypes","empty","typeText","shapeId","shape","viewBox","cx","cy","literal","height","NodeSubtypes","EdgeTypes","emptyEdge","fill","NODE_KEY","DataLinkView","onUpdateNode","viewNode","getNodeIndex","setNode","onSelectEdge","viewEdge","getNode","origin","selected","relations","subject","onSelectNode","edges","links","push","onCreateEdge","sourceViewNode","targetViewNode","forceUpdate","onSwapEdge","getEdgeIndex","edge","JSON","stringify","onDeleteEdge","deleteEdge","getViewNode","nodeKey","searchNode","nodes","handleClose","infoDialog","nextProps","nextState","findIndex","node","searchEdge","previousPage","graphView","domNode","datum","hasChildNodes","d3","append","getEdgeStyle","trans","getEdgeHandleTransformation","attr","select","d","edgeTypes","edgeHandleSize","getPathDescription","dist_default","window","innerHeight","flex","green500","ref","emptyType","nodeTypes","nodeSubtypes","onDeleteNode","onCreateNode","renderEdge","toPreviousPage","renderGraph","InfoBar","references","getData","getExampleData","FloatingActionButton_default","info_outline_default","src_DataLinkDialog","pushEdge","onRequestClose","material_ui_Card","textOverflow","href","rel","middleCard","overflow","whiteSpace","Divider_default","subtitle","actAsExpander","showExpandableButton","expandable","GraphContextForm","onSubmitForm","fileName","date","handleChange","today","Date","getDate","getMonth","getUTCFullYear","encodeGraphName","fullWidth","multiLine","rows","rowsMax","transformedName","encodeURI","DownloadView","handleRequestClose","snackbar","handleDropdownChange","serializer","dataType","SPARQLSerializer","JsonLDSerializer","NTriplesSerializer","TurtleSerializer","serialize","graph","err","displayText","sendSparqlInput","graphName","encodedGraphname","sparqlProcessing","dataQuery","contextQuery","toISOString","substring","executeQuery","sparqlCallback","openDialog","message","renderText","react_highlight_default","resultGraph","processing","CircularProgress_default","transform","size","minHeight","RaisedButton_default","encodeURIComponent","download","paddingTop","paddingLeft","paddingRight","SelectField_default","renderProgress","Snackbar_default","autoHideDuration","src_GraphContextForm","convertDataToTriples","classDefinitions","forEach","filter","nodeF","createClassDefinitions","rdf","dataRow","dataIndex","classDefinition","dataSubject","typeOf","predicate","add","relationNode","targetValue","literalDescription","find","extraVariable","classifyLiteral","_graph","distribute","dX","dY","rowLength","Math","ceil","sqrt","dataItem","dataCopy","y","_callee","regenerator_default","wrap","_context","prev","next","abrupt","stop","DataCreation","dataClassifications","def","variableLabel","currentPage","page","n","max","exampleValues","firstValues","constructor","getFirstValues","identifyLiteral","boolean","dataClasses","classifications","newRow","rowIndex","like","rowData","startsWith","definition","nodeCreation","transformData","splice","src_DataLinkView","goToFinalPage","goBackTo","setActiveNode","src_DataClassifyView","toThirdStep","Tabs","src_DataImport","finishFirstStep","renderDataClassifyView","renderDataLink","src_DownloadView","Array","some","Number","ImageRenderer","assign","Tutorialised","markdownText","dialogOpen","tutorials","1","expanded","markdownURIs","process","2","markdownId","body","tutorals","cardActions","expandCollapseCard","src","alt","openRemoteMarkdown","autoScrollBodyContent","contentStyle","react_markdown_default","renderers","image","React","SUBJECT","PREDICATE","OBJECT","TripleVisualizer","onSelectClassEdge","selectedClass","onSelectClassNode","getNodeClassIndex","classNodes","getViewClassNode","getClassfromData","library","ontology","classified","values","includes","shortTitle","startNode","endNode","delimiter","indexOf","lastIndexOf","classEdges","dataToNodes","renderCard","cardText","zIndex","renderClassCard","degrees","renderErrorBox","rdfsType","dcTitle","DataBrowser","getGraphData","graphname","getAllDataFrom","mounted","s","p","o","deleteGraph","removeContextData","removeData","err2","changeCurrentGraph","selectedIndex","currentSelected","graphContexts","headers","currentstore","onCellClick","onRowSelection","deselectOnClickaway","count","delete_default","colSpan","textAlign","dialogActions","secondary","flexDirection","justifyContent","alignItems","renderGraphTable","src_TripleVisualizer","SparqlVisualizer","csvData","csvStringify","val","output","file_download_default","header","preScanRows","QueryWriter","onDataSourceChange","selectedGraph","cm","codeMirror","setValue","onQueryChange","onFireQuery","onQueryCallBack","sort","b","localeCompare","thickness","color","orangeA200","graphData","Codemirror_default","el","options","mode","lineNumbers","theme","play_arrow_default","src_SparqlVisualizer","muiTheme","getMuiTheme","palette","primary1Color","primary2Color","green700","primary3Color","green400","accent1Color","States","Welcome","DataBrowsing","Querying","Tutorialise","AboutTool","AboutLD","AboutLODC","AboutLOV","NavigationBar","Drawer_default","Card_default","CardText_default","List","leftIcon","create_default","explore_default","lightbulb_outline_default","primaryTogglesNestedList","info_default","nestedItems","iconClassName","App","executeSparql","callBack","info","parser","client","execute","bindings","handleClick","renderContent","src_DataCreation","src_DataBrowser","src_QueryWriter","src_Tutorialised_0","padding","textStyle","SparqlClient","SparqlJs","Parser","MuiThemeProvider_default","AppBar_default","showMenuIconButton","ReactDOM","render","src_App_0","document","getElementById","navigator","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log"],"mappings":"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","file":"static/js/main.bafdf7b7.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 277,\n\t\"./N3Lexer.js\": 277,\n\t\"./N3Parser\": 278,\n\t\"./N3Parser.js\": 278,\n\t\"./N3Store\": 467,\n\t\"./N3Store.js\": 467,\n\t\"./N3StreamParser\": 468,\n\t\"./N3StreamParser.js\": 468,\n\t\"./N3StreamWriter\": 469,\n\t\"./N3StreamWriter.js\": 469,\n\t\"./N3Util\": 279,\n\t\"./N3Util.js\": 279,\n\t\"./N3Writer\": 280,\n\t\"./N3Writer.js\": 280\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2044;","/**\n * Created by Gerwin Bosch on 27-6-2017.\n */\nimport React, { Component } from 'react';\nimport FlatButton from 'material-ui/FlatButton/';\nimport Paper from 'material-ui/Paper';\nimport TextField from 'material-ui/TextField';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';\nimport PropTypes from 'prop-types';\nimport Baby from 'babyparse';\nimport './DataImport.css';\n\nconst styles = {\n  button: {\n    margin: 12,\n  },\n  exampleImageInput: {\n    cursor: 'pointer',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    width: '100%',\n    opacity: 0,\n  },\n};\n\n\nfunction TableView(props) {\n  if (props.data.length !== 0) {\n    return (\n      <Table\n        className=\"myTable\"\n        bodyStyle={{ tableLayout: 'auto', overflowY: 'visible', overflowX: 'visible' }}\n        headerStyle={{ OverflowX: 'visible', width: '100%', tableLayout: 'auto' }}\n        wrapperStyle={{ width: '100%', overflowX: 'auto', display: 'inline-block', tableLayout: 'auto', maxHeight: '756px' }}\n      >\n        {/* Render the table header */}\n        <TableHeader adjustForCheckbox={false} displaySelectAll={false}>\n          <TableRow key={0} style={{}}>\n            {/* Create columns for every data */}\n            {props.data[0].map(x => (\n              <TableHeaderColumn key={x} style={{ width: '75px', maxWidth: '75px' }}>{x}</TableHeaderColumn>\n            ))}\n          </TableRow>\n\n        </TableHeader>\n        <TableBody displayRowCheckbox={false}>\n          {/* Grab the rest of the data */}\n          {props.data.slice(\n            1, props.data.length < 100 ? props.data.length : 100,\n          ).map((row, index) => (\n            // Split the data in rows and columns\n            <TableRow key={props.data[index]} style={{}}>{\n              row.map(x => (\n                <TableRowColumn key={x} style={{ width: '75px', maxWidth: '75px' }}>{x}</TableRowColumn>\n              ))}</TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n    //    Return empty div\n  }\n  return (<p style={{ marginLeft: 'auto', marginRight: 'auto' }}>No Data Loaded</p>);\n}\nTableView.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n};\n\nclass ImportView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      import_file: '',\n      data: '',\n      selectedFile: 'No File selected',\n    };\n\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n\n  handleFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files.length === 0) {\n      this.setState({\n        selectedFile: 'No file selected',\n      });\n      this.props.setData([], '');\n      return;\n    }\n    // eslint-disable-next-line no-useless-escape\n    if (event.target.files[0].name.split('\\.').pop() !== 'csv') {\n      this.setState({\n        selectedFile: 'Wrong type of file selected',\n      });\n      this.props.setData([], '');\n      return;\n    }\n    // eslint-disable-next-line no-useless-escape\n    const filename = event.target.files[0].name.split('\\.')[0];\n    reader.addEventListener('load', () => {\n      Baby.parse(reader.result);\n      // eslint-disable-next-line no-useless-escape\n      this.props.setData(Baby.parse(reader.result).data, filename);\n    });\n    if (event.target.files) {\n      reader.readAsText(event.target.files[0], 'UTF-8');\n      this.setState({\n        selectedFile: event.target.files[0].name,\n      });\n    }\n  }\n\n  renderTable() {\n    return <TableView data={this.props.data} />;\n  }\n\n\n  render() {\n    const toContinue = this.props.data.length === 0;\n    return (\n      <div className=\"dataImport\">\n        <Paper zDepth={1}>\n          <FlatButton\n            label=\"Pick a file\"\n            labelPosition=\"before\"\n            style={styles.button}\n            containerElement=\"label\"\n          >\n            <TextField disabled hintText={this.state.selectedFile} />\n            <input\n              accept=\"csv\"\n              type=\"file\"\n              onChange={this.handleFileChange}\n              style={styles.exampleImageInput}\n            />\n          </FlatButton>\n          <FlatButton\n            id=\"continue_button\"\n            label=\"continue\"\n            disabled={toContinue}\n            style={{\n              float: 'right',\n              margin: 14,\n            }}\n            onClick={toContinue ? undefined : () => this.props.pageFunction(2)}\n          />\n        </Paper>\n        <Paper zDepth={1} style={{ width: '100%' }}>\n          {this.renderTable()}\n        </Paper>\n\n      </div>\n    );\n  }\n}\nImportView.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  setData: PropTypes.func.isRequired,\n  pageFunction: PropTypes.func.isRequired,\n\n\n};\n\nImportView.defaultProps = {\n  data: [],\n};\n\nexport default ImportView;\n","const mappings =\n    [\n      {\n        label: 'String',\n        description: 'A assortment of letters',\n        uri: 'http://www.w3.org/2001/XMLSchema#string',\n        variableToAdd: [],\n      },\n      {\n        label: 'Language tagged String',\n        description: 'Language tagged string',\n        uri: 'http://www.w3.org/2001/XMLSchema#string',\n        variableToAdd: ['language'],\n      },\n      {\n        label: 'Integer',\n        description: '',\n        uri: 'http://www.w3.org/2001/XMLSchema#integer',\n        variableToAdd: [],\n      },\n      {\n        label: 'Float',\n        description: '',\n        uri: 'http://www.w3.org/2001/XMLSchema#float',\n        variableToAdd: [],\n      },\n      {\n        label: 'Double',\n        description: '',\n        uri: 'http://www.w3.org/2001/XMLSchema#double',\n        variableToAdd: [],\n      },\n      {\n        label: 'Long',\n        description: '',\n        uri: 'http://www.w3.org/2001/XMLSchema#long',\n        variableToAdd: [],\n      },\n      {\n        label: 'Date',\n        description: 'YYYY-MM-DD',\n        uri: 'http://www.w3.org/2001/XMLSchema#date',\n        variableToAdd: [],\n      },\n      {\n        label: 'Date-time',\n        description: '',\n        uri: 'http://www.w3.org/2001/XMLSchema#datetime',\n        variableToAdd: [],\n      },\n      {\n        label: 'Other',\n        description: '',\n        variableToAdd: ['typeURI'],\n      },\n    ];\n\nexport default mappings;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from 'react';\nimport {\n  Dialog, DropDownMenu, FlatButton, IconButton, MenuItem, Step,\n  StepLabel,\n  Stepper,\n  TextField,\n} from 'material-ui';\nimport PropTypes from 'prop-types';\nimport { ActionSearch } from 'material-ui/svg-icons/';\n\nclass DataClassifyDialog extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchText: '',\n      stepIndex: 0,\n      vocabPickerIndex: 0,\n      results: [],\n      lovAvailable: true,\n    };\n  }\n  onVocabPicked = (_, index) => {\n    this.setState({\n      vocabPickerIndex: index,\n    });\n  };\n\n  searchVocabulary = (e) => {\n    const query = this.state.searchText;\n    const tempState = this.state;\n    e.preventDefault();\n    fetch(\n      `https://lov.linkeddata.es/dataset/lov/api/v2/term/search?q=${query}&type=class`)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response);\n        }\n        return response.json();\n      })\n      .then((json) => {\n        tempState.results = json.results.map(\n          item => ({\n            uri: item.uri[0],\n            vocabPrefix: item['vocabulary.prefix'][0],\n            prefix: item.prefixedName[0],\n          }),\n        );\n        if (tempState.results.length === 0) {\n          tempState.error = 'No results found';\n        }\n        tempState.lovAvailable = true;\n        this.setState(tempState);\n      })\n      .catch((ex) => {\n        if (ex.statusText) {\n          tempState.error = `Request failed due to ${ex}`;\n        } else {\n          tempState.error = 'LOV is currently not available';\n          tempState.lovAvailable = false;\n        }\n        console.error('parsing failed', ex);\n        this.setState(tempState);\n      });\n  };\n  handlePick = () => {\n    let result;\n    if (this.state.lovAvailable) {\n      result = this.state.results[this.state.vocabPickerIndex];\n      result.name = result.prefix.split(':')[1];\n    } else {\n      let name = this.props.data.columnName;\n      name = name.toLowerCase();\n      name = name.replace(/ /g, '_');\n      let uri = this.state.vocabDownText;\n      uri = uri.toLowerCase();\n      uri = uri.replace(/ /g, '_');\n      result = {\n        uri,\n        name,\n      };\n    }\n    this.props.finishCallBack(result, this.state.baseUri);\n    this.resetDialog();\n  };\n  resetDialog = () => {\n    this.setState({\n      searchText: '',\n      stepIndex: 0,\n      vocabPickerIndex: 0,\n      results: [],\n      lovAvailable: true,\n    });\n  };\n\n\n  renderDialogTableBody() {\n    if (!this.state.lovAvailable) {\n      return (<TextField\n        id=\"emergencyTextField\"\n        name=\"Class URI\"\n        hintText=\"The class of the URI\"\n        onChange={this.onUriChange}\n      />);\n    }\n    if (this.state.results.length) {\n      const result = this.state.results.map((column, index) =>\n        (<MenuItem\n          key={column.prefix}\n          value={index}\n          label={column.prefix}\n          primaryText={column.prefix}\n        />));\n      return (\n        <DropDownMenu\n          value={this.state.vocabPickerIndex}\n          onChange={this.onVocabPicked}\n          openImmediately\n        >\n          {result}\n        </DropDownMenu>\n      );\n    }\n    return <div />;\n  }\n\n  renderDialogBody() {\n    const item = this.props.data;\n    if (!item) {\n      return <div />;\n    }\n    switch (this.state.stepIndex) {\n      case 0:\n        return (\n          <div>\n            <p>In this dialog, you can specify a base URI for your data.\n                This base URI will be used to form URIs for data instances.</p>\n            <p>There are 2 possibilities:</p>\n            <ol type=\"1\">\n              <li>If you know that a column contains only unique values then you can just\n                  submit a base URI. The values from the column will be added at the\n                  end of the base URIs forming proper URIs for data instances.</li>\n              <li>If a column already conatains proper URIs then leave this field empty.</li>\n            </ol>\n            <p>Column name: {item.columnName}</p>\n            <p>Example value: {item.exampleValue}</p>\n            <TextField\n              name=\"Base-uri:\"\n              type=\"url\"\n              hintText=\"type a base URI here\"\n              onChange={(_, string) => this.setState({ baseUri: string })}\n            />\n          </div>\n\n        );\n      case 1:\n        return (\n          <div>\n            <p>This dialog allows specifying the class of things described by the data.\n                For example, if your data features people then you can use\n            <em> foaf:Person </em> </p>\n            <p>Examples are: person, company, animal etc.</p>\n            <form onSubmit={this.searchVocabulary}>\n              <TextField\n                name=\"Search vocabularies\"\n                hintText=\"class name\"\n                onChange={(_, string) => this.setState({ searchText: string })}\n                errorText={this.state.error}\n              />\n              <IconButton type=\"submit\"><ActionSearch /></IconButton>\n            </form>\n            <p>Provide a class name in the field above and pick a term from the suggestions</p>\n            <p> <em> Similar terms can be found in different vocabularies\n                therefore try to use as few vocabularies as possible</em></p>\n            {this.renderDialogTableBody()}\n\n          </div>\n        );\n      default:\n        return <div />;\n    }\n  }\n\n  render() {\n    const actions = [\n      <FlatButton\n        label={(this.state.stepIndex === 0) ? 'Next' : 'Finish'}\n        primary\n        onClick={() => ((this.state.stepIndex === 0) ?\n          this.setState({ stepIndex: 1 }) : this.handlePick())}\n        disabled={(this.state.stepIndex === 0 || this.state.vocabDownText) ?\n          false : !!(this.state.results.length === 0 || this.state.vocabDownText)}\n      />,\n      <FlatButton\n        label=\"Cancel\"\n        primary={false}\n        onClick={() => {\n          this.resetDialog();\n          this.props.closeCallBack();\n        }}\n      />,\n    ];\n    return (\n      <Dialog\n        actions={actions}\n        modal\n        open={this.props.open}\n      >\n        <Stepper activeStep={this.state.stepIndex}>\n          <Step>\n            <StepLabel>Pick URI</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>Select class</StepLabel>\n          </Step>\n        </Stepper>\n        {this.renderDialogBody()}\n      </Dialog>\n\n    );\n  }\n}\nDataClassifyDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  data: PropTypes.object.isRequired,\n  closeCallBack: PropTypes.func.isRequired,\n  finishCallBack: PropTypes.func.isRequired,\n};\n\nexport default DataClassifyDialog;\n\n","/**\n * Created by Gerwin Bosch on 3-7-2017.\n */\nimport React, { Component } from 'react';\nimport Paper from 'material-ui/Paper';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from 'material-ui/Table';\nimport CheckBox from 'material-ui/Checkbox';\nimport Dialog from 'material-ui/Dialog';\nimport 'whatwg-fetch';\nimport IconButton from 'material-ui/IconButton';\nimport MenuItem from 'material-ui/MenuItem';\nimport ArrowBack from 'material-ui/svg-icons/navigation/arrow-back';\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'material-ui';\nimport literalMap from './literalMapping';\nimport DataClassifyDialog from './DataClassifyDialog';\n\nclass DataClassifyView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = (\n      {\n        dialog: {\n          open: false,\n          id: 0,\n          searchText: '',\n          results: [],\n          stepIndex: 0,\n          vocabPickerIndex: 0,\n          error: '',\n          lovAvailable: true,\n          vocabDownText: '',\n        },\n        uriDialog: {\n          open: false,\n          error: '',\n          text: '',\n        },\n        tagDialog: {\n          open: false,\n          error: '',\n          text: '',\n        },\n      }\n    );\n  }\n\n  /* Renders the source link */\n\n  onBaseUriChange = (index, text) => {\n    this.props.setBaseUri(index, text);\n  };\n\n  onChange = (_, string) => {\n    const dialog = this.state.dialog;\n    dialog.searchText = string;\n    this.setState({ dialog });\n  };\n  onUriChange = (_, string) => {\n    const dialog = this.state.dialog;\n    dialog.vocabDownText = string;\n    this.setState({ dialog });\n  };\n  onTagChange = (_, string) => {\n    const tagDialog = this.state.tagDialog;\n    tagDialog.text = string;\n    this.setState({ tagDialog });\n  };\n  onDialogUriChange = (_, string) => {\n    const uriDialog = this.state.uriDialog;\n    uriDialog.text = string;\n    this.setState({ uriDialog });\n  };\n\n  getAmountOfClasses = () => {\n    const classes = this.props.data.slice();\n    if (classes.length === 0) return 0;\n    let counter = 0;\n    for (let i = 0; i < classes.length; i += 1) {\n      const item = classes[i];\n      if (item.uri) {\n        counter += 1;\n      }\n    }\n    return counter;\n  };\n\n  // Opens the dialog and set the row number of the item that was picked\n  handleOpen = (i) => {\n    const dialog = this.state.dialog;\n    dialog.open = true;\n    dialog.id = i;\n    this.setState({\n      dialog,\n    });\n  };\n\n  resetItem(index) {\n    this.props.setClass(index, { name: 'Literal' });\n    this.props.setUri(index, false);\n    this.props.setBaseUri(index, null);\n  }\n\n  handleColumnChange = (index, value) => {\n    switch (value) {\n      case 'Language tagged String':\n        this.setState({ tagDialog: { open: true, column: index } });\n        break;\n      case 'Other':\n        this.setState({ uriDialog: { open: true, column: index } });\n        break;\n      default:\n        this.props.setLiteralType(index, value);\n    }\n  };\n  finishCallBack = (classification, baseUri) => {\n    if (baseUri) {\n      this.props.setBaseUri(this.state.dialog.id, baseUri);\n    }\n    this.props.setClass(this.state.dialog.id, classification);\n    this.props.setUri(this.state.dialog.id, true);\n    this.setState({ dialog: { open: false, id: 0 } });\n  };\n\n\n  toNextPage() {\n    this.props.nextPage(this.state.data);\n  }\n\n  continueDisabled() {\n    return this.getAmountOfClasses() === 0;\n  }\n\n  startClassification(index) {\n    this.handleOpen(index);\n  }\n\n  render() {\n    const tagActions = [\n      <FlatButton\n        label=\"Finish\"\n        primary\n        onClick={() => {\n          const tagDialog = this.state.tagDialog;\n          if (!tagDialog.text) {\n            tagDialog.error = 'empty';\n            this.setState({ tagDialog });\n          } else {\n            this.props.setLiteralType(this.state.tagDialog.column, { label: 'Language tagged String', value: this.state.tagDialog.text });\n          }\n          tagDialog.open = false;\n          tagDialog.text = '';\n          tagDialog.column = -1;\n          this.setState(tagDialog);\n        }}\n\n      />,\n    ];\n    const uriActions = [\n      <FlatButton\n        label=\"Finish\"\n        primary\n        onClick={() => {\n          const uriDialog = this.state.uriDialog;\n          if (!uriDialog.text) {\n            uriDialog.error = 'empty';\n            this.setState({ uriDialog });\n          } else {\n            this.props.setLiteralType(this.state.uriDialog.column, { label: 'Other', value: this.state.uriDialog.text });\n          }\n          uriDialog.open = false;\n          uriDialog.text = '';\n          uriDialog.column = -1;\n          this.setState(uriDialog);\n        }}\n      />,\n    ];\n    return (\n      <div>\n        <Paper zDepth={2}>\n          <div style={{ width: '100%', display: 'inline-block' }}>\n            <FlatButton\n              label=\"continue\"\n              disabled={this.continueDisabled()}\n              onClick={() => this.toNextPage()}\n              style={{\n                float: 'right',\n                margin: 14,\n              }}\n            />\n          </div>\n\n        </Paper>\n        <Paper zDepth={1}>\n          <Table selectable={false}>\n            <TableHeader adjustForCheckbox={false} displaySelectAll={false}>\n              <TableRow>\n                <TableHeaderColumn\n                  tooltip=\"the column name\"\n                >Column Name</TableHeaderColumn>\n                <TableHeaderColumn tooltip=\"The first value\">Example Data\n                    Value</TableHeaderColumn>\n                <TableHeaderColumn tooltip=\"Is this a URI\">Is it a URI?</TableHeaderColumn>\n                <TableHeaderColumn tooltip=\"The type\">Class of objects</TableHeaderColumn>\n                <TableHeaderColumn tooltip=\"Base URI\">Base\n                    URI</TableHeaderColumn>\n                <TableHeaderColumn tooltip=\"Reset\">Reset</TableHeaderColumn>\n              </TableRow>\n            </TableHeader>\n            <TableBody displayRowCheckbox={false}>\n              {\n                this.props.data.map((column, index) =>\n                  (<TableRow key={column.columnName}>\n                    <TableRowColumn>{column.columnName}</TableRowColumn>\n                    <TableRowColumn>{column.exampleValue}</TableRowColumn>\n                    <TableRowColumn>\n                      <CheckBox\n                        checked={column.uri}\n                        onCheck={() => this.startClassification(\n                          index)}\n                        disabled={column.uri}\n                      />\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      {column.uri ? `URI : ${column.class.name}` :\n                        (<SelectField\n                          floatingLabelText=\"select types\"\n                          value={column.valueType}\n                          onChange={(event, idx, value) => this.handleColumnChange(index, value)}\n                        >\n                          {literalMap.map(litDescr =>\n                            (<MenuItem\n                              key={litDescr.label}\n                              label={litDescr.variableToAdd.length > 0 ? `${litDescr.variableToAdd[0]}:${column[litDescr.variableToAdd[0]]}` : litDescr.label}\n                              value={litDescr.label}\n                            >\n                              {litDescr.label}\n                            </MenuItem>),\n                          )}\n                        </SelectField>)\n\n                      }\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      {column.baseUri ? column.baseUri : ''}\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      {\n                        column.uri ?\n                          (\n                            <IconButton\n                              onClick={() => this.resetItem(index)}\n                            >\n                              <ArrowBack />\n                            </IconButton>\n                          ) : <div />\n                      }\n                    </TableRowColumn>\n\n                  </TableRow>),\n                )\n              }\n            </TableBody>\n\n          </Table>\n        </Paper>\n        <DataClassifyDialog\n          open={this.state.dialog.open}\n          data={this.props.data[this.state.dialog.id]}\n          closeCallBack={() => this.setState({ dialog: { open: false, id: 0 } })}\n          finishCallBack={this.finishCallBack}\n        />\n        <Dialog\n          actions={tagActions}\n          open={this.state.tagDialog.open}\n          modal\n        >\n          Please enter a language tag according to the ISO 639 Standard ex. (en or nl)\n          <TextField\n            id=\"tagText\"\n            errorText={this.state.tagDialog.error}\n            onChange={this.onTagChange}\n          />\n\n        </Dialog>\n        <Dialog\n          actions={uriActions}\n          open={this.state.uriDialog.open}\n          modal\n        >\n          Please enter a URI\n          <TextField\n            id=\"uriText\"\n            errorText={this.state.uriDialog.error}\n            onChange={this.onDialogUriChange}\n          />\n\n        </Dialog>\n\n      </div>\n    );\n  }\n}\n\nDataClassifyView.propTypes = {\n  setBaseUri: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setClass: PropTypes.func.isRequired,\n  setUri: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  setLiteralType: PropTypes.func.isRequired,\n\n\n};\nexport default DataClassifyView;\n","import React, { Component } from 'react';\nimport {\n  Dialog, DropDownMenu, FlatButton, IconButton, MenuItem,\n  TextField,\n} from 'material-ui';\nimport PropTypes from 'prop-types';\nimport { ActionSearch } from 'material-ui/svg-icons/';\n\nclass DataLinkDialog extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchText: '',\n      results: [],\n      lovAvailable: true,\n      vocabPickerIndex: 0,\n      error: '',\n    };\n  }\n  onUriChange = (_, string) => {\n    const dialog = this.state.dialog;\n    dialog.vocabDownText = string;\n    this.setState({ dialog });\n  };\n  onChange = (object, string) => {\n    this.setState({ searchText: string });\n  };\n\n  onVocabPicked = (_, index) => {\n    this.setState({\n      vocabPickerIndex: index,\n    });\n  };\n\n  handlePick = () => {\n    let result;\n    let name;\n    if (this.state.lovAvailable) {\n      result = this.state.results[this.state.vocabPickerIndex];\n      name = result.prefix.split(':')[1];\n    } else {\n      name = this.state.dialog.vocabDownText;\n      name = name.toLowerCase();\n      name = name.replace(/ /g, '_');\n      result = {\n        uri: name,\n        name,\n        prefix: name,\n      };\n    }\n    const newEdge = {\n      source: this.props.source,\n      target: this.props.target,\n      relation: result.prefix,\n      r: 30,\n      type: 'emptyEdge',\n      title: name,\n      label: name,\n      link: result.uri,\n      vocabPrefix: result.vocabPrefix,\n      prefix: result.prefix,\n    };\n    this.setState({\n      searchText: '',\n      results: [],\n      lovAvailable: true,\n      vocabPickerIndex: 0,\n      error: '',\n    });\n    this.props.finishDialog(newEdge);\n  };\n\n\n  searchVocabulary = (e) => {\n    const query = this.state.searchText;\n    let results = [];\n    e.preventDefault();\n    fetch(`https://lov.linkeddata.es/dataset/lov/api/v2/term/search?q=${query\n    }&type=property`)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response);\n        }\n        return response.json();\n      })\n      .then((json) => {\n        results = json.results.map(\n          item => ({\n            uri: item.uri[0],\n            vocabPrefix: item['vocabulary.prefix'][0],\n            prefix: item.prefixedName[0],\n          }),\n        );\n        if (results.length === 0) {\n          this.setState({ error: 'No results found' });\n        }\n        this.setState({\n          results,\n          lovAvailable: true,\n        });\n      })\n      .catch((ex) => {\n        let error;\n        let lovAvailable = true;\n        if (ex.statusText) {\n          error = `Request failed due to ${ex}`;\n        } else {\n          error = 'LOV is currently not available';\n          lovAvailable = false;\n        }\n        console.error('parsing failed', ex);\n        this.setState(error, lovAvailable);\n      });\n  };\n\n\n  renderDialogTableBody() {\n    if (!this.state.lovAvailable) {\n      return (<TextField\n        name=\"Relation URI\"\n        hintText=\"The relation of the URI\"\n        onChange={this.onUriChange}\n      />);\n    }\n    if (this.state.results.length) {\n      const result = this.state.results.map((column, index) =>\n        (<MenuItem\n          key={column.prefix}\n          value={index}\n          label={column.prefix}\n          primaryText={column.prefix}\n        />));\n      return (\n        <DropDownMenu\n          value={this.state.vocabPickerIndex}\n          onChange={this.onVocabPicked}\n          openImmediately\n        >\n          {result}\n        </DropDownMenu>\n      );\n    }\n    return <div />;\n  }\n\n  render() {\n    const actions = [\n      <FlatButton\n        label={'Finish'}\n        primary\n        onClick={this.handlePick}\n        disabled={!(this.state.results.length !== 0 || this.state.vocabDownText)}\n      />,\n\n      <FlatButton\n        label=\"Cancel\"\n        onClick={() => {\n          this.setState({\n            searchText: '',\n            results: [],\n            lovAvailable: true,\n            vocabPickerIndex: 0,\n            error: '',\n          });\n          this.props.closeDialog();\n        }}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        modal\n        open={this.props.open}\n      >\n\n        <div style={{ width: '100%' }}>\n          <p>This dialog allows specifying relationships between data items that was linked.\n          In RDF this is called a predicate.</p>\n          <p>For example, <em> foaf:age </em> can be used to link a person to his/her age</p>\n          <form onSubmit={this.searchVocabulary}>\n            <TextField\n              name=\"Search vocabularies\"\n              hintText=\"relation name\"\n              onChange={this.onChange}\n              errorText={this.state.error}\n            />\n            <IconButton type=\"submit\"><ActionSearch /></IconButton>\n          </form>\n          <p>Provide a relation name in the field above and pick a term from the suggestions</p>\n          <p> <em> Similar terms can be found in different vocabularies\n          therefore try to use as few vocabularies as possible</em></p>\n          {this.renderDialogTableBody()}\n        </div>\n\n      </Dialog>);\n  }\n}\n\nexport default DataLinkDialog;\n\nDataLinkDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  source: PropTypes.number.isRequired,\n  target: PropTypes.number.isRequired,\n  finishDialog: PropTypes.func.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n};\n","/**\n * Created by Gerwin Bosch on 6-7-2017.\n */\nimport React, { Component } from 'react';\nimport Paper from 'material-ui/Paper';\nimport FlatButton from 'material-ui/FlatButton';\nimport GraphView from 'react-digraph';\nimport { Card, CardHeader, CardText } from 'material-ui/Card';\nimport { green500 } from 'material-ui/styles/colors';\nimport Dialog from 'material-ui/Dialog';\nimport 'whatwg-fetch';\nimport Divider from 'material-ui/Divider';\nimport PropTypes from 'prop-types';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport Info from 'material-ui/svg-icons/action/info-outline';\nimport * as d3 from 'd3';\nimport DataLinkDialog from './DataLinkDialog';\n\nfunction doNothing() {\n\n}\n\nconst GraphConfig = {\n  NodeTypes: {\n    empty: {\n      typeText: 'None',\n      shapeId: '#empty',\n      shape: (\n        <symbol viewBox=\"0 0 100 100\" id=\"empty\" key=\"0\">\n          <circle cx=\"50\" cy=\"50\" r=\"45\" />\n        </symbol>\n      ),\n    },\n    uri: {\n      typeText: 'class',\n      shapeId: '#uri',\n      shape: (\n        <symbol viewBox=\"0 0 100 100\" id=\"uri\" key=\"1\">\n          <circle cx=\"50\" cy=\"50\" r=\"45\" />\n        </symbol>\n\n      ),\n    },\n    literal: {\n      typeText: 'raw value',\n      shapeId: '#literal',\n      shape: (<symbol viewBox=\"0 0 50 50\" id=\"literal\" key=\"2\">\n        <rect width=\"45\" height=\"45\" />\n      </symbol>\n      ),\n    },\n\n  },\n  NodeSubtypes: {},\n  EdgeTypes: {\n    emptyEdge: {\n      shapeId: '#emptyEdge',\n      typeText: 'Literal',\n      shape: (\n        <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\" key=\"0\">\n          <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\" />\n        </symbol>\n      ),\n    },\n  },\n};\nconst NODE_KEY = 'id'; // Key used to identify nodes\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nconst EMPTY_TYPE = 'empty'; // Empty node type\n\n\nclass DataLinkView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // nodes: props.data.nodes,\n      // links: props.data.links,\n      selected: {},\n      dialog: {\n        open: false,\n        results: [],\n        vocabPickerIndex: 0,\n        lovAvailable: true,\n      },\n      infoDialog: { open: false },\n    };\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) { this.forceUpdate(); }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    const nodes = nextProps.nodes;\n    const links = nextProps.links;\n    if (this.props.nodes !== nodes || this.props.links !== links) {\n      return true;\n    }\n    if (this.state.selected !== nextState.selected) {\n      this.setState(nextState.selected);\n      return true;\n    }\n    return true;\n  }\n  // Called by 'drag' handler, etc..\n  // to sync updates from D3 with the graph\n  onUpdateNode = (viewNode) => {\n    const i = this.getNodeIndex(viewNode);\n    this.props.setNode(i, viewNode);\n  };\n  // Edge 'mouseUp' handler\n  onSelectEdge = (viewEdge) => {\n    const target = this.getNode(viewEdge.target).label;\n    const origin = this.getNode(viewEdge.source).label;\n\n    this.setState({\n      selected: viewEdge,\n      relations: [\n        {\n          subject: origin,\n          relation: viewEdge.relation,\n          object: target,\n        }],\n    });\n  };\n\n  // Node 'mouseUp' handler\n  onSelectNode = (viewNode) => {\n    // Deselect events will send Null viewNode\n    if (viewNode !== null) {\n      const edges = [];\n      for (let i = 0; i < this.props.links.length; i += 1) {\n        const item = this.props.links[i];\n        let origin;\n        let target;\n        if (item.source === viewNode.id) {\n          origin = viewNode.label;\n          target = this.getNode(item.target).label;\n          edges.push({\n            subject: origin,\n            relation: item.relation,\n            object: target,\n          });\n        } else if (item.target === viewNode.id) {\n          origin = this.getNode(item.target).label;\n          target = viewNode.label;\n          edges.push({\n            subject: origin,\n            relation: item.relation,\n            object: target,\n          });\n        }\n      }\n      this.setState({ selected: viewNode, relations: edges });\n    } else {\n      this.setState({ selected: {}, relations: [] });\n    }\n  };\n  // Creates a new node between two edges\n  onCreateEdge = (sourceViewNode, targetViewNode) => {\n    if (sourceViewNode === targetViewNode) {\n      return;\n    }\n    if (sourceViewNode.type === 'literal') {\n      return;\n    }\n    const dialog = this.state.dialog;\n    dialog.open = true;\n    dialog.source = sourceViewNode[NODE_KEY];\n    dialog.target = targetViewNode[NODE_KEY];\n    this.setState({\n      dialog,\n    });\n    this.forceUpdate();\n  };\n\n  // Called when an edge is reattached to a different target.\n  onSwapEdge = (sourceViewNode, targetViewNode, viewEdge) => {\n    const edges = this.props.links;\n    const i = this.getEdgeIndex(viewEdge);\n    const edge = JSON.parse(JSON.stringify(edges[i]));\n\n    edge.source = sourceViewNode[NODE_KEY];\n    edge.target = targetViewNode[NODE_KEY];\n    edges[i] = edge;\n\n    this.setState({ links: edges });\n  };\n  // Called when an edge is deleted\n  onDeleteEdge = (viewEdge) => {\n    const i = this.getEdgeIndex(viewEdge);\n    this.props.deleteEdge(i, viewEdge);\n    this.setState({\n      selected: {},\n    });\n  };\n\n  // Helper to find the index of a given node\n  getNodeIndex(searchNode) {\n    return this.props.nodes.findIndex(node => node[NODE_KEY] === searchNode[NODE_KEY]);\n  }\n\n  // Helper to find the index of a given edge\n  getEdgeIndex(searchEdge) {\n    return this.props.links.findIndex(edge => edge.source === searchEdge.source &&\n          edge.target === searchEdge.target);\n  }\n\n  // Given a nodeKey, return the corresponding node\n  getViewNode = (nodeKey) => {\n    const searchNode = {};\n    searchNode[NODE_KEY] = nodeKey;\n    const i = this.getNodeIndex(searchNode);\n    return this.props.nodes[i];\n  };\n\n  /*\n   * Handlers/Interaction\n   */\n\n  getNode(id) {\n    for (let i = 0; i < this.props.nodes.length; i += 1) {\n      if (this.props.nodes[i].id === id) {\n        return this.props.nodes[i];\n      }\n    }\n    return undefined;\n  }\n\n  toNextPage() {\n    this.props.nextPage();\n  }\n\n  toPreviousPage() {\n    this.props.previousPage(2);\n  }\n\n  handleClose = () => {\n    const dialog = this.state.dialog;\n    dialog.open = false;\n    dialog.results = [];\n    dialog.vocabPickerIndex = 0;\n    this.setState({\n      dialog,\n    });\n    this.forceUpdate();\n  };\n  // eslint-disable-next-line class-methods-use-this\n  renderEdge(graphView, domNode, datum) {\n    // For new edges, add necessary child domNodes\n    if (!domNode.hasChildNodes()) {\n      d3.select(domNode).append('path');\n      d3.select(domNode).append('use');\n      d3.select(domNode).append('text');\n    }\n\n    const style = graphView.getEdgeStyle(datum, graphView.props.selected);\n    const trans = graphView.getEdgeHandleTransformation(datum);\n    d3.select(domNode).attr('style', style).select('use').attr('xlink:href', d => graphView.props.edgeTypes[d.type].shapeId)\n      .attr('width', graphView.props.edgeHandleSize)\n      .attr('height', graphView.props.edgeHandleSize)\n      .attr('transform', trans);\n\n    d3.select(domNode).select('path').attr('d', graphView.getPathDescription);\n    if (datum.label) {\n      d3.select(domNode).select('text').attr('class', 'barsEndlineText')\n        .attr('text-anchor', 'middle')\n        .attr('transform', trans)\n        .text(datum.label);\n    }\n  }\n\n\n  renderGraph() {\n    const nodes = this.props.nodes;\n    const edges = this.props.links;\n    const selected = this.state.selected;\n\n    const NodeTypes = GraphConfig.NodeTypes;\n    const NodeSubtypes = GraphConfig.NodeSubtypes;\n    const EdgeTypes = GraphConfig.EdgeTypes;\n    if (this.props.nodes.length > 0) {\n      return (\n        <GraphView\n          style={\n            {\n              height: window.innerHeight - 190,\n              flex: '0 0 85%',\n            }\n          }\n          primary={green500}\n          // eslint-disable-next-line react/no-string-refs\n          ref=\"GraphView\"\n          nodeKey={NODE_KEY}\n          emptyType={EMPTY_TYPE}\n          nodes={nodes}\n          edges={edges}\n          selected={selected}\n          nodeTypes={NodeTypes}\n          nodeSubtypes={NodeSubtypes}\n          edgeTypes={EdgeTypes}\n          getViewNode={this.getViewNode}\n          onSelectNode={this.onSelectNode}\n          onUpdateNode={this.onUpdateNode}\n          onSelectEdge={this.onSelectEdge}\n          onCreateEdge={this.onCreateEdge}\n          onSwapEdge={this.onSwapEdge}\n          onDeleteEdge={this.onDeleteEdge}\n          onDeleteNode={doNothing}\n          onCreateNode={doNothing}\n          renderEdge={this.renderEdge}\n        />\n      );\n    }\n    return <div />;\n  }\n\n  render() {\n    const selected = this.state.selected;\n\n\n    return (\n\n      <div>\n        <Paper zDepth={2}>\n          <div style={{ width: '100%', display: 'inline-block' }}>\n            <FlatButton\n              label=\"return\"\n              onClick={() => this.toPreviousPage()}\n              style={{\n                margin: 14,\n              }}\n            />\n            <FlatButton\n              label=\"continue\"\n              onClick={() => this.toNextPage()}\n              style={{\n                float: 'right',\n                margin: 14,\n              }}\n            />\n          </div>\n\n        </Paper>\n        <div style={{ display: 'flex' }}>\n          {this.renderGraph()}\n          <InfoBar\n            selected={selected}\n            references={this.state.relations}\n            getData={this.props.getExampleData}\n          />\n          <FloatingActionButton\n            style={{\n              position: 'absolute',\n              right: '256px',\n              bottom: '8px',\n            }}\n            onClick={() => this.setState({ infoDialog: { open: true } })}\n          ><Info /></FloatingActionButton>\n\n\n        </div>\n        <DataLinkDialog\n          open={this.state.dialog.open}\n          source={this.state.dialog.source}\n          target={this.state.dialog.target}\n          finishDialog={(edge) => {\n            this.props.pushEdge(edge);\n            const dialog = this.state.dialog;\n            dialog.open = false;\n            dialog.source = -1;\n            dialog.target = -1;\n            this.setState({ dialog });\n          }}\n          closeDialog={() => {\n            const dialog = this.state.dialog;\n            dialog.open = false;\n            dialog.source = -1;\n            dialog.target = -1;\n            this.setState({ dialog });\n          }}\n        />\n        <Dialog\n          open={this.state.infoDialog.open}\n          onRequestClose={() => this.setState({ infoDialog: { open: false } })}\n          title=\"controls\"\n        >\n              Click: Select node/edge<br />\n              Click, hold and drag a node: Drag the node<br />\n              Shift+Click a node and drag: Create new Edge<br />\n              Click on an Edge and press Del: Delete the Edge<br />\n\n        </Dialog>\n\n      </div>\n    );\n  }\n}\nfunction InfoBar(props) {\n  const item = props.selected;\n  let text;\n  if (item.type === 'literal') {\n    text = (<CardText><p>ColumnName: {item.title}</p></CardText>);\n  } else if (item.type === 'uri') {\n    text = (\n      <CardText style={{ textOverflow: 'ellipsis' }}>\n        <p>\n          Class: <a href={item.uri} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a><br />\n          Ontology: {item.title}<br />\n          Prefix: {item.prefixedName}\n        </p>\n      </CardText>);\n  } else if (item.type === 'emptyEdge') {\n    text = (\n      <p>\n        Property: <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.relation}</a><br />\n        Ontology: {item.prefix}<br />\n        Prefix: {item.vocabPrefix}<br />\n      </p>);\n  }\n  let middleCard = <div />;\n  if (item.type !== 'emptyEdge') {\n    middleCard = props.getData(item.column, 0).results.map((x, idx) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <CardText key={idx} style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}>\n        {x}\n        <Divider />\n      </CardText>\n    ));\n  } else if (props.references && props.references.length > 0) {\n    middleCard = (\n      <Card>\n        <CardHeader\n          title=\"References\"\n          subtitle=\"Click to expand\"\n          actAsExpander\n          showExpandableButton\n        />\n        {\n          props.references.map(relation =>\n            (<CardText key={relation.subject} style={{ textOverflow: 'ellipsis' }} expandable>\n              <Divider />\n              <p>\n                <b>Subject: </b>{relation.subject}<br />\n                <b>Relation: </b>{relation.relation}<br />\n                <b>Object: </b>{relation.object}<br />\n              </p>\n            </CardText>),\n          )\n        }\n      </Card>\n    );\n  }\n  return (\n    <Card style={{ width: '256px', maxWidth: '256px' }}>\n      <Card>\n        <CardText>\n          {text}\n        </CardText>\n      </Card>\n      {middleCard}\n    </Card>\n  );\n}\n\nDataLinkView.propTypes = {\n  nodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  links: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setNode: PropTypes.func.isRequired,\n  deleteEdge: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  pushEdge: PropTypes.func.isRequired,\n  getExampleData: PropTypes.func.isRequired,\n};\nInfoBar.propTypes = {\n  selected: PropTypes.objectOf(PropTypes.any),\n  getData: PropTypes.func.isRequired,\n  references: PropTypes.arrayOf(PropTypes.object),\n};\n\nInfoBar.defaultProps = {\n  references: [],\n  selected: undefined,\n};\n\n\nexport default DataLinkView;\n","import React, { Component } from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport PropTypes from 'prop-types';\n\n\nclass GraphContextForm extends Component {\n  static encodeGraphName = (name) => {\n    if (name) {\n      const transformedName = name.replace(/ /g, '_');\n      return encodeURI(transformedName);\n    } return '';\n  };\n  constructor() {\n    super();\n    const today = new Date();\n    this.state = {\n      date: `${today.getDate()}-${today.getMonth() + 1}-${today.getUTCFullYear()}`,\n      fileName: '',\n      description: '',\n    };\n  }\n  onSubmit = () => {\n    this.props.onSubmitForm(\n      this.state.fileName,\n      this.state.description,\n      this.state.date);\n  };\n  handleChange = (event, value) => {\n    const target = event.target;\n    switch (target.name) {\n      case 'description':\n        this.setState({ description: value });\n        break;\n      case 'title':\n        this.setState({ fileName: value });\n        break;\n      default:\n        console.error('unknown change', target.name);\n    }\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        label=\"publish\"\n        disabled={this.state.fileName === ''}\n        onClick={this.onSubmit}\n        primary\n      />,\n      <FlatButton\n        label=\"cancel\"\n        onClick={this.props.closeDialog}\n      />,\n\n    ];\n    return (\n      <Dialog open={this.props.open} actions={actions}>\n        <TextField\n          name=\"filename\"\n          value={`http://linkdale.org/data/${GraphContextForm.encodeGraphName(this.state.fileName)}`}\n          floatingLabelText=\"URI of the dataset\"\n          disabled\n          fullWidth\n        />\n        <br />\n        <TextField\n          type=\"text\"\n          name=\"title\"\n          floatingLabelText=\"Title of the dataset\"\n          onChange={this.handleChange}\n          fullWidth\n        />\n        <br />\n        <TextField\n          name=\"description\"\n          type=\"text\"\n          multiLine\n          rows={2}\n          rowsMax={8}\n          floatingLabelText=\"A small description of the dataset\"\n          onChange={this.handleChange}\n          fullWidth\n        />\n        <br />\n        <TextField\n          type=\"text\"\n          name=\"date\"\n          floatingLabelText=\"Date of creation\"\n          value={this.state.date}\n          fullWidth\n          disabled\n        />\n      </Dialog>\n    );\n  }\n}\nGraphContextForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default GraphContextForm;\n\n","import React, { Component } from 'react';\nimport Paper from 'material-ui/Paper';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport SelectField from 'material-ui/SelectField';\nimport * as TurtleSerializer from 'rdf-serializer-n3';\nimport * as JsonLDSerializer from 'rdf-serializer-jsonld';\nimport * as NTriplesSerializer from 'rdf-serializer-ntriples';\nimport * as SPARQLSerializer from 'rdf-serializer-sparql-update';\nimport Highlight from 'react-highlight';\nimport MenuItem from 'material-ui/MenuItem';\nimport PropTypes from 'prop-types';\nimport Snackbar from 'material-ui/Snackbar';\nimport 'highlight.js/styles/default.css';\nimport GraphContextForm from './GraphContextForm';\n\nclass DownloadView extends Component {\n  static encodeGraphName = (name) => {\n    if (name) {\n      const transformedName = name.replace(/ /g, '_');\n      return encodeURI(transformedName);\n    }\n    return '';\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      sparqlProcessing: false,\n      filename: props.filename,\n      dialog: {\n        open: false,\n      },\n      snackbar: {\n        open: false,\n        message: 'hi i\\'m a snackbar',\n      },\n\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const graph = nextProps.graph;\n    if (!graph) {\n      return true;\n    }\n    if (this.props.graph !== graph) {\n      const serializer = new TurtleSerializer();\n      const text = '.turtle';\n      const dataType = 'application/x-turtle';\n      serializer.serialize(graph, () => {\n      }).then((resultGraph, err) =>\n        this.setState({\n          displayText: resultGraph,\n          error: err,\n        }),\n      );\n      this.setState({\n        text,\n        dataType,\n      });\n      return true;\n    }\n    return true;\n  }\n\n  handleRequestClose = () => {\n    const snackbar = this.state.snackbar;\n    snackbar.open = false;\n    this.setState({\n      snackbar,\n    });\n  };\n  handleDropdownChange = (_, value) => {\n    let serializer;\n    let text;\n    let dataType;\n    switch (value) {\n      case 3 :\n        serializer = new SPARQLSerializer();\n        text = '.txt';\n        dataType = 'text/plain';\n        break;\n      case 1 :\n        serializer = new JsonLDSerializer();\n        text = '.json';\n        dataType = 'application/json-ld';\n        break;\n      case 2 :\n        serializer = new NTriplesSerializer();\n        text = '.txt';\n        dataType = 'text/plain';\n        break;\n      default :\n        serializer = new TurtleSerializer();\n        text = '.turtle';\n        dataType = 'application/x-turtle';\n        break;\n    }\n    serializer.serialize(this.props.graph, () => {\n    }).then((graph, err) =>\n      this.setState({\n        displayText: graph,\n        error: err,\n      }),\n    );\n    this.setState({\n      text,\n      dataType,\n      value,\n    });\n    this.forceUpdate();\n  };\n  sendSparqlInput = (graphName, description, date) => {\n    const serializer = new NTriplesSerializer();\n    const encodedGraphname = DownloadView.encodeGraphName(graphName);\n    serializer.serialize(this.props.graph, () => {\n    }).then((graph, err) => {\n      if (err) {\n        console.error(err);\n      } else {\n        this.setState({\n          sparqlProcessing: true,\n          dialog: { open: false },\n        });\n        const uri = `http://linkdale.org/data/${encodedGraphname}`;\n        const dataQuery = `INSERT DATA { GRAPH <${uri}> {${graph}}}`;\n        const contextQuery = `INSERT DATA { GRAPH <http://linkdale.org/metadata> {\n            <${uri}> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://rdfs.org/ns/void#Dataset> .\n            <${uri}> <http://purl.org/dc/terms/title> \"${graphName}\" .\n            <${uri}> <http://purl.org/dc/terms/description> \"${description}\" .\n            <${uri}> <http://purl.org/dc/terms/created> \"${new Date().toISOString().substring(0, 10)}\"^^<http://www.w3.org/2001/XMLSchema#date> .}}`;\n        this.props.executeQuery(contextQuery, () => {\n          this.props.executeQuery(dataQuery, this.sparqlCallback);\n        });\n      }\n    });\n  };\n  closeDialog = () => {\n    const dialog = this.state.dialog;\n    dialog.open = false;\n    this.setState({\n      dialog,\n    });\n  };\n  openDialog = () => {\n    const dialog = this.state.dialog;\n    dialog.open = true;\n    this.setState({\n      dialog,\n    });\n  };\n\n  sparqlCallback = (err, result) => {\n    if (err || !result) {\n      console.error(err);\n      const snackbar = this.state.snackbar;\n      snackbar.open = true;\n      snackbar.message = 'An error has occurred while storing your data-set';\n      this.setState({\n        sparqlProcessing: false,\n        snackbar,\n      });\n    } else {\n      const snackbar = this.state.snackbar;\n      snackbar.open = true;\n      snackbar.message = 'Data-set successfully stored';\n      this.setState({\n        sparqlProcessing: false,\n        snackbar,\n      });\n    }\n  };\n\n  renderText = () => {\n    if (!this.state.displayText) {\n      return <p>Generating output</p>;\n    }\n    if (typeof this.state.displayText === 'object') {\n      return (<Highlight className=\"json\">{JSON.stringify(this.state.displayText, null,\n        2)}</Highlight>);\n    }\n    return (\n      <Highlight className=\"xml\">{this.state.displayText}</Highlight>\n    );\n  };\n\n  renderProgress() {\n    if (this.props.processing || this.state.sparqlProcessing) {\n      return (\n        <CircularProgress\n          style={{\n            margin: 'auto',\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%,-50%)',\n          }}\n          size={100}\n        />\n      );\n    }\n    return <div />;\n  }\n\n  render() {\n    return (\n      <div style={{\n        position: 'relative',\n        width: '100%',\n        minHeight: '100%',\n        height: '100%',\n      }}\n      >\n        <Paper>\n          <div style={{ width: '100%%' }}>\n            <div style={{ width: '100%' }}>\n              <RaisedButton\n                label=\"download\"\n                href={`data:${this.state.dataType};charset=utf-8,${encodeURIComponent(\n                  this.state.displayText)}`}\n                download={`${this.props.filename}${this.state.text}`}\n                disabled={this.props.processing}\n                style={{\n                  margin: '30px',\n                  width: '40%',\n                  float: 'left',\n\n                }}\n              />\n            </div>\n            <div style={{ width: '100%' }}>\n              <RaisedButton\n                label=\"publish\"\n                disabled={this.state.displayText === ''}\n                onClick={this.openDialog}\n                style={{\n                  margin: '30px',\n                  width: '40%',\n                  float: 'right',\n\n                }}\n              />\n            </div>\n\n          </div>\n          <div style={\n            {\n              paddingTop: '90px',\n              minHeight: '700px',\n              paddingLeft: '50px',\n              paddingRight: '50px',\n            }\n          }\n          >\n            <SelectField\n              floatingLabelText=\"File type\"\n              value={this.state.value}\n              onChange={this.handleDropdownChange}\n              name=\"fileType\"\n            >\n              <MenuItem value={0} primaryText=\"Turtle\" />\n              <MenuItem value={1} primaryText=\"JSON-LD\" />\n              <MenuItem value={2} primaryText=\"N-Triples\" />\n              <MenuItem value={3} primaryText=\"SPARQL\" />\n            </SelectField>\n            <br />\n            {this.renderText()}\n            {this.renderProgress()}\n            <p />\n          </div>\n\n        </Paper>\n\n        <Snackbar\n          open={this.state.snackbar.open}\n          message={this.state.snackbar.message}\n          autoHideDuration={4000}\n          onRequestClose={this.handleRequestClose}\n        />\n        <GraphContextForm\n          open={this.state.dialog.open}\n          closeDialog={this.closeDialog}\n          onSubmitForm={this.sendSparqlInput}\n        />\n      </div>\n    );\n  }\n}\n\nDownloadView.propTypes = {\n  graph: PropTypes.objectOf(PropTypes.object),\n  processing: PropTypes.bool.isRequired,\n  executeQuery: PropTypes.func.isRequired,\n  filename: PropTypes.string,\n};\nDownloadView.defaultProps = {\n  graph: undefined,\n  filename: undefined,\n};\nexport default DownloadView;\n","import * as rdf from 'rdf-ext';\nimport literalMap from './literalMapping';\n\nfunction createClassDefinitions(nodes, links) {\n  const classDefinitions = [];\n  nodes.forEach((node) => {\n    // Skip when the nodes is a literal, as they can't have subjects\n    if (node.type === 'Literal') return;\n    // Get all the relations of this node\n    let relations = links.map((link) => {\n      if (link.source === node.id) {\n        // Push relation and class\n        return ({\n          link,\n          target: nodes.filter(nodeF => nodeF.id === link.target)[0],\n        });\n      }\n      return undefined;\n    });\n    relations = relations.filter(relation => relation !== undefined);\n\n    // When there are no relations skip the node\n    if (relations.length === 0) return;\n    classDefinitions.push({\n      subject: node,\n      relations,\n    });\n  });\n  return classDefinitions;\n}\n// function classifyLiteral(literal) { //OLD GUESSING APPROACH\n//   if (Number(literal)) {\n//     if (literal % 1 === 0) return rdf.createLiteral(literal, null, 'http://www.w3.org/2001/XMLSchema#integer');\n//     return rdf.createLiteral(literal, null, 'http://www.w3.org/2001/XMLSchema#float');\n//   }\n//   if (Date.parse(literal)) return rdf.createLiteral(Date.parse(literal).toISOString(), null, 'http://www.w3.org/2001/XMLSchema#date');\n//   return rdf.createLiteral(literal, 'en', 'http://www.w3.org/2001/XMLSchema#string');\n// }\nfunction classifyLiteral(literal, target) {\n  const literalDescription =\n    literalMap.find(description => (description.label === target.valueType));\n  if (literalDescription.variableToAdd.length > 0) {\n    const extraVariable = literalDescription.variableToAdd[0];\n    if (literalDescription.label === 'Language tagged String') {\n      const value = target[extraVariable];\n      return rdf.createLiteral(literal, value, literalDescription.uri);\n    } else if (literalDescription.label === 'Other') {\n      return rdf.createLiteral(literal, null, target[extraVariable]);\n    }\n  }\n  return rdf.createLiteral(literal, null, literalDescription.uri);\n}\n\n\nfunction convertDataToTriples(data, links, nodes) {\n  // Map relations\n  const classDefinitions = createClassDefinitions(nodes, links);\n  // For every node\n  const graph = rdf.createGraph();\n  // For every row of data except the header\n  data.forEach((dataRow, dataIndex) => {\n    if (dataIndex === 0) return;\n    classDefinitions.forEach((classDefinition) => {\n      if (!dataRow[classDefinition.subject.column]) return;\n      // Skip when there are no relations\n      if (classDefinition.relations.length === 0) return;\n      // If there is no item create a new one\n      const dataSubject = rdf.createNamedNode(dataRow[classDefinition.subject.column]);\n      const typeOf = rdf.createNamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n      if (graph.filter(relation => relation.object === dataSubject &&\n          relation.predicate === typeOf).length === 0) {\n        graph.add(rdf.createTriple(\n          dataSubject,\n          typeOf,\n          rdf.createNamedNode(classDefinition.subject.uri)));\n      }\n      // For every relation check if there is a value\n      classDefinition.relations.forEach((relation) => {\n        const relationNode = rdf.createNamedNode(relation.link.link);\n        if (dataRow[relation.target.column]) {\n          // The target value\n          let targetValue = dataRow[relation.target.column];\n          // If the relation is not mentioned yet\n          if (relation.target.type === 'literal') {\n            targetValue = classifyLiteral(targetValue, relation.target);\n          } else {\n            targetValue = rdf.createNamedNode(targetValue);\n          }\n          // eslint-disable-next-line no-underscore-dangle\n          if (graph._graph.filter(node => (node.object === dataSubject &&\n              node.predicate === relationNode &&\n              node.subject === targetValue)).length === 0) {\n            graph.add(rdf.createTriple(dataSubject, relationNode, targetValue));\n          }\n        }\n      });\n    });\n  });\n  return graph;\n}\n\nfunction distribute(data) {\n  let dX = 100;\n  let dY = 100;\n  const rowLength = Math.ceil(Math.sqrt(data.length));\n  return data.map((dataItem, index) => {\n    if (index % rowLength === 0 && index !== 0) {\n      dX = 100;\n      dY += 225;\n    }\n    const dataCopy = dataItem;\n    if (!dataCopy.x) {\n      dataCopy.x = dX;\n      dataCopy.y = dY;\n      dX += 225;\n    }\n    return dataCopy;\n  });\n}\n\nfunction nodeCreation(data, classifications) {\n  let nodes = [];\n  const edges = [];\n  classifications.forEach((classification, index) => {\n    if (classification.baseUri) {\n      nodes.push({\n        id: (nodes.length),\n        label: data[0][index],\n        type: 'literal',\n        r: 30,\n        title: data[0][index],\n        column: index,\n        valueType: 'String',\n      });\n      nodes.push({\n        id: (nodes.length),\n        label: `${classification.class.name}`,\n        type: 'uri',\n        r: 30,\n        title: `${classification.class.prefix}`,\n        uri: classification.class.uri,\n        prefixedName: classification.class.vocabPrefix,\n        column: data[0].length,\n      });\n      edges.push({\n        source: nodes.length - 1,\n        target: nodes.length - 2,\n        relation: 'rdfs:label',\n        r: 30,\n        type: 'emptyEdge',\n        title: 'label',\n        link: 'http://www.w3.org/2000/01/rdf-schema#label',\n        vocabPrefix: 'rdfs',\n        prefix: 'rdfs:label',\n      });\n      let newRow = data.map((dataRow, rowIndex) => {\n        // Column header\n        if (rowIndex === 0) {\n          return `${classification.class.name}`;\n        }\n        // Data is empty\n        if (!dataRow[index]) {\n          return '';\n        }\n        // Find the same\n        const like = data.filter(rowData => rowData[index] === dataRow[index]);\n        if (like.length > 0) {\n          return like[0][index];\n        }\n        return '';\n      });\n      if (classification.baseUri) {\n        newRow = newRow.map((item, idx) => {\n          if (!item) {\n            return '';\n          }\n          let baseUri = classification.baseUri;\n          if (idx === 0) {\n            return item;\n          }\n          if (baseUri.startsWith('www')) {\n            baseUri = `http://${baseUri}`;\n          } else if (!baseUri.startsWith('http')) {\n            baseUri = `http://www.${baseUri}`;\n          }\n          if (classification.baseUri[classification.baseUri.length - 1] !== '/') {\n            baseUri += '/';\n          }\n          return baseUri + encodeURI(item.replace(/ /g, '_'));\n        });\n      }\n      data.forEach((dataRow, idx) => dataRow.push(newRow[idx]));\n    } else if (classification.class.uri) {\n      nodes.push({\n        id: (nodes.length),\n        label: classification.class.name,\n        type: 'uri',\n        r: 30,\n        title: classification.class.name,\n        uri: classification.class.uri,\n        column: index,\n      });\n    } else {\n      const definition = literalMap.find(def => def.label === classification.valueType);\n      const node = {\n        id: (nodes.length),\n        label: classification.columnName,\n        type: 'literal',\n        r: 30,\n        title: classification.columnName,\n        column: index,\n        valueType: classification.valueType,\n      };\n      if (definition.variableToAdd.length > 0) {\n        node[definition.variableToAdd[0]] = classification[definition.variableToAdd[0]];\n      }\n      nodes.push(node);\n    }\n  });\n\n  // Distribution algorithm\n  nodes = distribute(nodes);\n  return ({\n    data,\n    edges,\n    nodes,\n  });\n}\nexport {\n  convertDataToTriples,\n  createClassDefinitions,\n  nodeCreation,\n  distribute\n};","/* eslint-disable react/jsx-no-bind,react/jsx-filename-extension */\n/**\n * Created by Gerwin Bosch on 30-6-2017.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, Tabs } from 'material-ui/Tabs';\nimport DataImport from './DataImport';\nimport DataClassifyView from './DataClassifyView';\nimport DataLinkView from './DataLinkView';\nimport DownloadView from './DownloadView';\nimport { convertDataToTriples, nodeCreation } from './dataprocessing';\nimport literalMap from './literalMapping';\n\nasync function transformData(data, links, nodes) {\n  return convertDataToTriples(data, links, nodes);\n}\n\n\nclass DataCreation extends Component {\n  static getFirstValues = (data) => {\n    if (!data) {\n      return undefined;\n    }\n    if (data.length !== 0) {\n      const firstValues = new Array(data[0].length).fill('');\n      data.some((column, idx) => {\n        if (idx !== 0) {\n          firstValues.forEach((value, index) => {\n            if (column[index] && !value) {\n              firstValues[index] = column[index];\n            }\n          });\n        }\n        return firstValues.filter(value => !value).length === 0;\n      });\n      return firstValues;\n    }\n    return [];\n  };\n  static identifyLiteral=(literal) => {\n    if (Number(literal)) {\n      if (literal % 1 === 0) return 'Integer';\n      return 'float';\n    }\n    if (Date.parse(literal)) return 'Date-time';\n    return 'String';\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      data: [],\n      dataClassifications: [],\n      classes: [],\n      nodes: [],\n      edges: [],\n      processing: true,\n      filename: '',\n    };\n  }\n\n\n  // columnName: column,\n  // exampleValue: temp[1][index],\n  // class: {name:'Literal'},\n  // uri: false,\n  // label: false\n\n\n  getExampleData(column, page) {\n    let data = this.state.data.map((row, index) => {\n      if (index === 0) {\n        return undefined;\n      }\n      if (row[column]) {\n        return row[column];\n      }\n      return undefined;\n    });\n    data = data.filter(n => n);\n    let dataSubset;\n    if (data.length / 10 < page) {\n      dataSubset = data.slice(page * 10, data.length);\n    } else {\n      dataSubset = data.slice(page * 10, (page + 1) * 10);\n    }\n    return ({ results: dataSubset, max: data.length });\n  }\n\n\n  setData(data, filename) {\n    let exampleValues;\n    if (data.length > 1) {\n      const firstValues = this.constructor.getFirstValues(data);\n      exampleValues = data[0].map((column, index) =>\n        ({\n          columnName: column,\n          exampleValue: firstValues[index],\n          valueType: this.constructor.identifyLiteral(firstValues[index]),\n          class: { name: 'Literal' },\n          uri: false,\n        }),\n      );\n    } else {\n      exampleValues = [];\n    }\n    this.setState({\n      data,\n      dataClassifications: exampleValues,\n      filename,\n    });\n  }\n\n  setUri(index, boolean) {\n    const dataClasses = this.state.dataClassifications.slice();\n    const item = dataClasses[index];\n    item.uri = boolean;\n    dataClasses[index] = item;\n    this.setState({\n      dataClassifications: dataClasses,\n    });\n  }\n\n  setClass(index, classification) {\n    const dataClasses = this.state.dataClassifications.slice();\n    const item = dataClasses[index];\n    item.class = classification;\n    dataClasses[index] = item;\n    this.setState({\n      dataClassifications: dataClasses,\n    });\n  }\n\n  setBaseUri(index, classification) {\n    const classes = this.state.dataClassifications.slice();\n    const item = classes[index];\n    item.baseUri = classification;\n    classes[index] = item;\n    this.setState({\n      dataClassifications: classes,\n    });\n  }\n\n  setActiveNode(index, node) {\n    const nodes = this.state.nodes.slice();\n    nodes[index] = node;\n    this.setState({\n      nodes,\n    });\n  }\n  setLiteralType = (index, value) => {\n    const classes = this.state.dataClassifications.slice();\n    const item = classes[index];\n    if (value.label) {\n      const definition = literalMap.find(def => def.label === value.label);\n      definition.variableToAdd.forEach(\n        (variableLabel) => { item[variableLabel] = value.value; },\n      );\n      item.valueType = value.label;\n    } else {\n      item.valueType = value;\n    }\n    classes[index] = item;\n    this.setState({\n      dataClassifications: classes,\n    });\n  };\n\n\n  toThirdStep() {\n    // Convert data to nodes and edges\n    this.setState(\n      {\n        nodes: [],\n        edges: [],\n      },\n    );\n    const result = nodeCreation(this.state.data.slice(), this.state.dataClassifications.slice());\n    const nodes = result.nodes;\n    const edges = result.edges;\n    const data = result.data;\n    this.setState({\n      data,\n      currentPage: 3,\n      classes: this.state.dataClassifications,\n      nodes,\n      edges,\n    });\n  }\n  goBackTo(index) {\n    switch (index) {\n      case 2:\n        this.setState({\n          nodes: [],\n          edges: [],\n          currentPage: 2,\n        });\n        break;\n      default:\n        this.setState({\n          currentPage: index,\n        });\n    }\n  }\n\n  goToFinalPage() {\n    this.setState({\n      currentPage: 4,\n    });\n    transformData(this.state.data, this.state.edges, this.state.nodes)\n      .then((result) => {\n        this.setState({\n          graph: result,\n          processing: false,\n        });\n      });\n  }\n  finishFirstStep() {\n    this.setState({\n      currentPage: 2,\n    });\n  }\n\n\n  pushEdge(newEdge) {\n    const links = this.state.edges.slice();\n    links.push(newEdge);\n    this.setState({\n      edges: links,\n    },\n    );\n  }\n\n  deleteEdge(index) {\n    const edges = this.state.edges;\n    edges.splice(index, 1);\n    this.setState({ edges });\n  }\n\n  renderDataLink() {\n    if (this.state.nodes) {\n      return (\n        <DataLinkView\n          nodes={this.state.nodes}\n          links={this.state.edges}\n          getExampleData={this.getExampleData.bind(this)}\n          nextPage={this.goToFinalPage.bind(this)}\n          previousPage={this.goBackTo.bind(this)}\n          setNode={this.setActiveNode.bind(this)}\n          pushEdge={this.pushEdge.bind(this)}\n          deleteEdge={this.deleteEdge.bind(this)}\n        />\n      );\n    }\n    return <div />;\n  }\n  renderDataClassifyView() {\n    if (this.state.data) {\n      return (\n        <DataClassifyView\n          data={this.state.dataClassifications}\n          nextPage={this.toThirdStep.bind(this)}\n          setClass={this.setClass.bind(this)}\n          setUri={this.setUri.bind(this)}\n          setBaseUri={this.setBaseUri.bind(this)}\n          setLiteralType={this.setLiteralType}\n        />\n      );\n    }\n    return <div />;\n  }\n\n  render() {\n    return (\n      <Tabs value={this.state.currentPage}>\n        <Tab label=\"Step 1: Upload data\" value={1} disabled>\n          {(this.state.currentPage === 1) ?\n            <DataImport\n              data={this.state.data}\n              pageFunction={this.finishFirstStep.bind(this)}\n              setData={this.setData.bind(this)}\n            />\n            : null}\n        </Tab>\n        <Tab label=\"Step 2: Classify data\" value={2} disabled>\n          {(this.state.currentPage === 2) ?\n            this.renderDataClassifyView()\n            : null}\n        </Tab>\n        <Tab label=\"Step 3: Link data\" value={3} disabled>\n          {(this.state.currentPage === 3) ?\n            this.renderDataLink()\n            : null}\n        </Tab>\n        <Tab label=\"Step 4: Download / Publish\" value={4} disabled>\n          {(this.state.currentPage === 4) ?\n            <DownloadView\n              processing={this.state.processing}\n              graph={this.state.graph}\n              executeQuery={this.props.executeQuery}\n              filename={this.state.filename}\n            />\n            : null}\n        </Tab>\n      </Tabs>);\n  }\n}\nDataCreation.propTypes = {\n  executeQuery: PropTypes.func.isRequired,\n};\n\nexport default DataCreation;\n","/* eslint-disable react/jsx-no-bind,react/jsx-filename-extension */\n/**\n * Created by theli on 8/9/2017.\n */\nimport 'whatwg-fetch';\nimport React from 'react';\nimport {\n  Card,\n  CardActions,\n  CardMedia,\n  CardTitle,\n  CardText,\n} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport Dialog from 'material-ui/Dialog';\nimport Markdown from 'react-markdown';\nimport './Tutorialised.css';\n\nfunction ImageRenderer(props) {\n  // eslint-disable-next-line alt prop provided by React Markdown renderer\n  return <img {...props} style={{maxWidth:'100%'}}/>\n}\n\nclass Tutorialised extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      markdownText: '#NO MARKDOWN LOADED',\n      dialogOpen: false,\n      tutorials:\n      {\n        1: {\n          expanded: false,\n          markdownURIs:\n          [\n            `${process.env.PUBLIC_URL}/markdown/myFirstLD.MD`,\n            `${process.env.PUBLIC_URL}/markdown/BrowseLD.MD`,\n            `${process.env.PUBLIC_URL}/markdown/QueryLD.MD`,\n            `${process.env.PUBLIC_URL}/markdown/EnrichLD.MD`,\n          ],\n        },\n        2: {\n          expanded: false,\n          markdownURIs:\n          [\n            `${process.env.PUBLIC_URL}/markdown/AboutBPIL.MD`,\n            `${process.env.PUBLIC_URL}/markdown/BPIL1.MD`,\n            `${process.env.PUBLIC_URL}/markdown/BPIL2.MD`,\n            `${process.env.PUBLIC_URL}/markdown/BPIL3.MD`,\n            `${process.env.PUBLIC_URL}/markdown/BPIL4.MD`,\n          ],\n        },\n      },\n    };\n  }\n\n  handleClose() {\n    this.setState({ dialogOpen: false });\n  }\n\n  openRemoteMarkdown(id, markdownId) {\n    fetch(this.state.tutorials[id].markdownURIs[markdownId]).then(\n      result => result.text()).then(\n      body => this.setState({\n        markdownText: body,\n        dialogOpen: true,\n      }),\n    );\n  }\n  expandCollapseCard(id) {\n    const tutorals = this.state.tutorials;\n    tutorals[id].expanded = !this.state.tutorials[id].expanded;\n    this.setState({ tutorials: tutorals });\n  }\n\n  render() {\n    const cardActions = [\n      <FlatButton\n        label=\"Close\"\n        primary\n        onClick={this.handleClose.bind(this)}\n      />,\n    ];\n    return (\n      <div className=\"TutorialWrapper\">\n        <Card\n          className=\"TutorialCard\"\n          expanded={this.state.tutorials[1].expanded}\n        >\n          <CardMedia className=\"clickable_surface\" onClick={() => this.expandCollapseCard(1)}>\n            <img src={`${process.env.PUBLIC_URL}/images/tut1.png`} alt=\"Getting Started\" />\n          </CardMedia>\n          <CardTitle\n            className=\"clickable_surface\"\n            title=\"Getting Started\"\n            subtitle=\"Learn Linked Data\"\n            onClick={() => this.expandCollapseCard(1)}\n          />\n          <CardText\n            className=\"TutorialCardText clickable_surface\"\n            onClick={() => this.expandCollapseCard(1)}\n            expandable\n          >\n            <strong>Linked Data</strong> is a method of publishing structured data so that it\n              can be linked and queried.\n              With this tutorial you will learn the basics of the Linked Data\n              technology and will generate your first Linked Data.\n          </CardText>\n          <CardActions expandable>\n            <FlatButton\n              label=\"Tutorial: Create Linked Data\"\n              onClick={() => this.openRemoteMarkdown(1, 0)}\n            />\n            <FlatButton\n              label=\"Tutorial: Browse Data\"\n              onClick={() => this.openRemoteMarkdown(1, 1)}\n            />\n            <FlatButton\n              label=\"Tutorial: Query Data\"\n              onClick={() => this.openRemoteMarkdown(1, 2)}\n            />\n            {/* <FlatButton */}\n            {/* label=\"Tutorial: Enrich Linked Data\" */}\n            {/* onClick={() => this.openRemoteMarkdown(1, 3)} */}\n            {/* /> */}\n          </CardActions>\n        </Card>\n        <Card\n          className=\"TutorialCard\"\n          expanded={this.state.tutorials[2].expanded}\n        >\n          <CardMedia\n            className=\"clickable_surface\"\n            onClick={() => this.expandCollapseCard(2)}\n            style={{ width: '100%', marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            <img className=\"clickable_surface\" src={`${process.env.PUBLIC_URL}/images/bpil.png`} alt=\"Business Process Integration Lab\" />\n          </CardMedia>\n          <CardTitle\n            className=\"clickable_surface\"\n            onClick={() => this.expandCollapseCard(2)}\n            title=\"Business Process Integration Lab\"\n            subtitle=\"Linked Data for Supply-chain integration\"\n            actAsExpander\n          />\n          <CardText\n            className=\"TutorialCardText clickable_surface\"\n            onClick={() => this.expandCollapseCard(2)}\n            expandable\n          >\n            <strong> BPIL </strong> is a course at University of Twente where students\n              learn how to build and integrate systems between different parties in a supply chain.\n              Linked Data is a technology that helps to simplify\n              data management and exchange between parties.\n          </CardText>\n          <CardActions expandable>\n            <FlatButton\n              label=\"About BPIL\"\n              onClick={() => this.openRemoteMarkdown(2, 0)}\n            />\n            <FlatButton\n              label=\"Assignment 1: Explain Yourself\"\n              onClick={() => this.openRemoteMarkdown(2, 1)}\n            />\n            <FlatButton\n              label=\"Assignment 2: Enrich It\"\n              onClick={() => this.openRemoteMarkdown(2, 2)}\n            />\n            <FlatButton\n              label=\"Assignment 3: Find your match\"\n              onClick={() => this.openRemoteMarkdown(2, 3)}\n            />\n            <FlatButton\n                  label=\"Assignment 4: Call mister Postman\"\n                  onClick={() => this.openRemoteMarkdown(2, 4)}\n            />\n          </CardActions>\n        </Card>\n        <Dialog\n          open={this.state.dialogOpen}\n          autoScrollBodyContent\n          onRequestClose={this.handleClose.bind(this)}\n          modal={false}\n          actions={cardActions}\n          contentStyle={{width:\"80%\", maxWidth:\"none\"}}\n        >\n          <Markdown source={this.state.markdownText}\n          renderers={{image:ImageRenderer}}\n           />\n        </Dialog>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Tutorialised;\n","import React from 'react';\nimport { Tabs, Tab } from 'material-ui/Tabs';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';\nimport PropTypes from 'prop-types';\nimport GraphView from 'react-digraph';\nimport { green500 } from 'material-ui/styles/colors';\nimport { Card, CardHeader, CardText } from 'material-ui/Card';\nimport Paper from 'material-ui/Paper';\nimport * as d3 from 'd3';\nimport { distribute } from './dataprocessing';\n\nconst GraphConfig = {\n  NodeTypes: {\n    empty: {\n      typeText: 'None',\n      shapeId: '#empty',\n      shape: (\n        <symbol viewBox=\"0 0 100 100\" id=\"empty\" key=\"0\">\n          <circle cx=\"50\" cy=\"50\" r=\"45\" />\n        </symbol>\n      ),\n    },\n    uri: {\n      typeText: 'URI',\n      shapeId: '#uri',\n      shape: (\n        <symbol viewBox=\"0 0 100 100\" id=\"uri\" key=\"1\">\n          <circle cx=\"50\" cy=\"50\" r=\"45\" />\n        </symbol>\n\n      ),\n    },\n    literal: {\n      typeText: 'Literal',\n      shapeId: '#literal',\n      shape: (<symbol viewBox=\"0 0 50 50\" id=\"literal\" key=\"2\">\n        <rect width=\"45\" height=\"45\" />\n      </symbol>\n      ),\n    },\n\n  },\n  NodeSubtypes: {},\n  EdgeTypes: {\n    emptyEdge: {\n      shapeId: '#emptyEdge',\n      typeText: 'Literal',\n      shape: (\n        <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\" key=\"0\">\n          <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\" />\n        </symbol>\n      ),\n    },\n  },\n};\nconst NODE_KEY = 'id'; // Key used to identify nodes\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nconst EMPTY_TYPE = 'empty'; // Empty node type\n\nconst SUBJECT = 0;\nconst PREDICATE = 1;\nconst OBJECT = 2;\n\n\nclass TripleVisualizer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nodes: [],\n      edges: [],\n      classNodes: [],\n      classEdges: [],\n      selected: {},\n      selectedClass: {},\n\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.dataToNodes(nextProps.data);\n      this.getClassfromData(nextProps.data);\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state);\n  }\n  // Edge 'mouseUp' handler\n  onSelectEdge = (viewEdge) => {\n    this.setState({\n      selected: viewEdge,\n    });\n  };\n  // Edge 'mouseUp' handler\n  onSelectClassEdge = (viewEdge) => {\n    this.setState({\n      selectedClass: viewEdge,\n    });\n  };\n\n  // Node 'mouseUp' handler\n  onSelectClassNode = (viewNode) => {\n    // Deselect events will send Null viewNode\n    if (viewNode !== null) {\n      this.setState({ selectedClass: viewNode });\n    } else {\n      this.setState({ selectedClass: {} });\n    }\n  };\n\n  // Node 'mouseUp' handler\n  onSelectNode = (viewNode) => {\n    // Deselect events will send Null viewNode\n    if (viewNode !== null) {\n      // const allRelations = this.state.edges.filter(\n      //     edge => edge.source === viewNode.id || edge.target === viewNode.id);\n      // const relations = allRelations.map(relation =>\n      // `${this.getViewNode(relation.source).title} ${relation.label.split('/').pop()}\n      // ${this.getViewNode(relation.target).title}`);\n      this.setState({ selected: viewNode });\n    } else {\n      this.setState({ selected: {}, relations: [] });\n    }\n  };\n\n\n  // Helper to find the index of a given node\n  getNodeIndex = searchNode => this.state.nodes.findIndex(\n    node => node[NODE_KEY] === searchNode[NODE_KEY]);\n\n  // Given a nodeKey, return the corresponding node\n  getViewNode = (nodeKey) => {\n    const searchNode = {};\n    searchNode[NODE_KEY] = nodeKey;\n    const i = this.getNodeIndex(searchNode);\n    return this.state.nodes[i];\n  };\n  // Helper to find the index of a given node\n  getNodeClassIndex = searchNode => this.state.classNodes.findIndex(\n    node => node[NODE_KEY] === searchNode[NODE_KEY]);\n\n  // Given a nodeKey, return the corresponding node\n  getViewClassNode = (nodeKey) => {\n    const searchNode = {};\n    searchNode[NODE_KEY] = nodeKey;\n    const i = this.getNodeClassIndex(searchNode);\n    return this.state.classNodes[i];\n  };\n\n\n  getClassfromData = (data) => {\n    let nodes = [];\n    const edges = [];\n    const library = [];\n    data.forEach((ontology) => {\n      let node = library.find(classification => classification.value === ontology[SUBJECT].value);\n      if (!node) {\n        node = {\n          value: ontology[SUBJECT].value,\n          relations: [],\n        };\n        library.push(node);\n      }\n      if (ontology[PREDICATE].value === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') {\n        node.class = ontology[OBJECT].value;\n      } else {\n        node.relations.push(\n          { classification: ontology[PREDICATE].value, target: ontology[OBJECT].value });\n      }\n    });\n    library.forEach((classification) => {\n      const classified = nodes.find(node => node.label === classification.class);\n      if (!classified) {\n        let shortTitle = classification.class;\n        if (shortTitle.split('/').pop() &&\n            !(shortTitle.split('/').pop() === '')) {\n          shortTitle = classification.class.split('/').pop();\n        }\n\n        nodes.push({\n          id: (nodes.length),\n          title: shortTitle,\n          r: 15,\n          label: classification.class,\n          type: 'uri',\n          values: [classification.value],\n        });\n      } else {\n        const idx = nodes.findIndex(node => node.id === classified.id);\n        if (!classified.values.includes(classification.value)) {\n          classified.values.push(classification.value);\n        }\n        nodes[idx] = classified;\n      }\n    });\n    library.forEach((classification) => {\n      const startNode = nodes.find(node => node.values.includes(classification.value));\n      classification.relations.forEach((relation) => {\n        let endNode = nodes.find(node => node.values.includes(relation.target));\n        if (!endNode) {\n          endNode = nodes.find(node => node.label === relation.classification);\n          if (!endNode) {\n            endNode = {\n              id: (nodes.length),\n              title: relation.classification.split('/').pop(),\n              r: 15,\n              label: relation.classification,\n              type: 'literal',\n              values: [],\n            };\n            nodes.push(endNode);\n          }\n        }\n        const delimiter = relation.classification.indexOf('#') !== -1 ? '#' : '/';\n        edges.push({\n          source: startNode.id,\n          target: endNode.id,\n          label: relation.classification,\n          title: relation.classification.substring(\n            relation.classification.lastIndexOf(delimiter) + 1, relation.classification.length),\n          type: 'emptyEdge',\n        });\n      });\n    });\n    nodes = distribute(nodes);\n    this.setState({ classNodes: nodes, classEdges: edges });\n  };\n  dataToNodes = (data) => {\n    // Subject, Predicate, Object\n    // Nodes = {Subject}, {Object}\n    // Edges  = {o:s d:o t:Predicate}\n    // id label type r title column\n    let nodes = [];\n    const edges = [];\n    if (data.length > 0) {\n      data.forEach((ontology) => {\n        let subject = nodes.find(node => node.label === ontology[0].value);\n        if (!subject) {\n          let shortTitle = ontology[0].value;\n          if (shortTitle.split('/').pop() &&\n              !(shortTitle.split('/').pop() === '')) {\n            shortTitle = ontology[0].value.split('/').pop();\n          }\n\n          subject = {\n            id: (nodes.length),\n            title: shortTitle,\n            r: 15,\n            label: ontology[0].value,\n            type: 'uri', // Subjects are always URI's\n          };\n          nodes.push(subject);\n        }\n        let object = nodes.find(node => node.label === ontology[2].value);\n        if (!object) {\n          object = {\n            id: (nodes.length),\n            title: ontology[2].type === 'uri' ? ontology[2].value.split('/').pop() : ontology[2].value,\n            r: 15,\n            label: ontology[2].value,\n            type: ontology[2].type === 'uri' ? 'uri' : 'literal',\n          };\n          nodes.push(object);\n        }\n        const delimiter = ontology[1].value.indexOf('#') !== -1 ? '#' : '/';\n        edges.push({\n          source: subject.id,\n          target: object.id,\n          title: ontology[1].value.substring(\n            ontology[1].value.lastIndexOf(delimiter) + 1, ontology[1].value.length),\n          label: ontology[1].value,\n          type: 'emptyEdge',\n        });\n      });\n      nodes = distribute(nodes);\n    }\n    this.setState({ nodes, edges });\n  };\n  doNothing = () => {};\n  // {source: 0, target: 1, label: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\", type: \"emptyEdge\"}\n  // eslint-disable-next-line class-methods-use-this\n  renderEdge(graphView, domNode, datum) {\n    // For new edges, add necessary child domNodes\n    if (!domNode.hasChildNodes()) {\n      d3.select(domNode).append('path');\n      d3.select(domNode).append('use');\n      d3.select(domNode).append('text');\n    }\n\n    const style = graphView.getEdgeStyle(datum, graphView.props.selected);\n    let trans = graphView.getEdgeHandleTransformation(datum);\n    trans = trans.replace(/rotate\\((.*?)\\)/g, (value) => {\n      let degrees = Number(value.substring(7, value.length - 1));\n      if ((degrees > 90 && degrees < 270) || degrees < -90) {\n        degrees += 180;\n        if (degrees > 359) {\n          degrees -= 360;\n        }\n      }\n      return `rotate(${degrees})`;\n    });\n\n    d3.select(domNode).attr('style', style).select('use').attr('xlink:href', d => graphView.props.edgeTypes[d.type].shapeId)\n      .attr('width', graphView.props.edgeHandleSize)\n      .attr('height', graphView.props.edgeHandleSize)\n      .attr('transform', trans);\n\n    d3.select(domNode).select('path').attr('d', graphView.getPathDescription);\n    if (datum.label) {\n      d3.select(domNode).select('text').attr('class', 'barsEndlineText')\n        .attr('text-anchor', 'middle')\n        .attr('transform', trans)\n        .attr('font-size', '15px')\n        .attr('stroke-width', '1px')\n        .text(datum.title);\n    }\n  }\n\n\n  renderCard = () => {\n    let cardText = '';\n    let title = '';\n    let subtitle = '';\n    if (this.state.selected) {\n      if (this.state.selected.type === 'literal') {\n        cardText = <p>{this.state.selected.label}</p>;\n        title = this.state.selected.title;\n        subtitle = 'Literal';\n      } else if (this.state.selected.type === 'emptyEdge') {\n        cardText = <a href={this.state.selected.label}>{this.state.selected.label}</a>;\n        title = this.state.selected.label;\n        subtitle = 'Reference';\n      } else if (this.state.selected.type === 'uri') {\n        cardText = <a href={this.state.selected.label}>{this.state.selected.label}</a>;\n        title = this.state.selected.title;\n        subtitle = 'URI';\n      }\n    }\n\n    return (\n      <Card style={{ position: 'absolute', right: '15px', bottom: '15px', width: 'fit-content', zIndex: '10' }}>\n        <CardHeader\n          title={title}\n          subtitle={subtitle}\n        />\n        <CardText>\n          {cardText}\n        </CardText>\n      </Card>\n    );\n  };\n  renderClassCard = () => {\n    let cardText = '';\n    let title = '';\n    let subtitle = '';\n    if (this.state.selectedClass) {\n      if (this.state.selectedClass.type === 'literal') {\n        title = this.state.selectedClass.title;\n        subtitle = 'Literal';\n      } else if (this.state.selectedClass.type === 'emptyEdge') {\n        title = this.state.selectedClass.label;\n        subtitle = 'Reference';\n      } else if (this.state.selectedClass.type === 'uri') {\n        title = this.state.selectedClass.title;\n        subtitle = 'URI';\n      }\n      cardText = <a href={this.state.selectedClass.label}>{this.state.selectedClass.label}</a>;\n    }\n\n    return (\n      <Card style={{ position: 'absolute', right: '15px', bottom: '15px', width: 'fit-content', zIndex: '10' }}>\n        <CardHeader\n          title={title}\n          subtitle={subtitle}\n        />\n        <CardText>\n          {cardText}\n        </CardText>\n      </Card>\n    );\n  };\n  render() {\n    const renderErrorBox = this.props.error ? (\n      <Tab label=\"Error\">\n        <Paper>\n          <h1>Something went wrong</h1>\n          {this.props.error}\n        </Paper>\n      </Tab>\n    ) : (null);\n\n    return (\n      <Tabs>\n        {renderErrorBox}\n        <Tab label=\"Table\" disabled={!!this.props.error}>\n          <Table selectable={false} wrapperStyle={{ maxHeight: '48vh' }}>\n            <TableHeader displaySelectAll={false}>\n              <TableRow>\n                <TableHeaderColumn>Subject</TableHeaderColumn>\n                <TableHeaderColumn>Predicate</TableHeaderColumn>\n                <TableHeaderColumn>Object</TableHeaderColumn>\n              </TableRow>\n            </TableHeader>\n            <TableBody\n              displayRowCheckbox={false}\n              style={{ maxHeight: '20vh' }}\n            >\n              {this.props.data.map(row => (\n                <TableRow key={row[0].value + row[1].value + row[2].value}>\n                  <TableRowColumn>{row[0].value}</TableRowColumn>\n                  <TableRowColumn>{row[1].value}</TableRowColumn>\n                  <TableRowColumn>{row[2].value}</TableRowColumn>\n                </TableRow>))}\n            </TableBody>\n          </Table>\n        </Tab>\n        <Tab label=\"Data graph\" style={{ position: 'relative' }} disabled={!!this.props.error}>\n          <GraphView\n            style={\n              {\n                height: '48vh',\n              }\n            }\n            primary={green500}\n            // eslint-disable-next-line react/no-string-refs\n            ref=\"GraphView\"\n            nodeKey={NODE_KEY}\n            emptyType={EMPTY_TYPE}\n            nodes={this.state.nodes}\n            edges={this.state.edges}\n            selected={this.state.selected}\n            nodeTypes={GraphConfig.NodeTypes}\n            nodeSubtypes={GraphConfig.NodeSubtypes}\n            edgeTypes={GraphConfig.EdgeTypes}\n            getViewNode={this.getViewNode}\n            onSelectNode={this.onSelectNode}\n            onUpdateNode={this.doNothing}\n            onSelectEdge={this.onSelectEdge}\n            onCreateEdge={this.doNothing}\n            onSwapEdge={this.doNothing}\n            onDeleteEdge={this.doNothing}\n            onDeleteNode={this.doNothing}\n            onCreateNode={this.doNothing}\n            renderEdge={this.renderEdge}\n          />\n          {this.renderCard()}\n\n\n        </Tab>\n        <Tab label=\"Class graph\" disabled={!!this.props.error}>\n          <GraphView\n            style={\n              {\n                height: '48vh',\n              }\n            }\n            primary={green500}\n            // eslint-disable-next-line react/no-string-refs\n            ref=\"GraphView\"\n            nodeKey={NODE_KEY}\n            emptyType={EMPTY_TYPE}\n            nodes={this.state.classNodes}\n            edges={this.state.classEdges}\n            selected={this.state.selectedClass}\n            nodeTypes={GraphConfig.NodeTypes}\n            nodeSubtypes={GraphConfig.NodeSubtypes}\n            edgeTypes={GraphConfig.EdgeTypes}\n            getViewNode={this.getViewClassNode}\n            onSelectNode={this.onSelectClassNode}\n            onUpdateNode={this.doNothing}\n            onSelectEdge={this.onSelectClassEdge}\n            onCreateEdge={this.doNothing}\n            onSwapEdge={this.doNothing}\n            onDeleteEdge={this.doNothing}\n            onDeleteNode={this.doNothing}\n            onCreateNode={this.doNothing}\n            renderEdge={this.renderEdge}\n          />\n          {this.renderClassCard()}\n\n        </Tab>\n      </Tabs>\n    );\n  }\n}\nTripleVisualizer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.array).isRequired,\n  error: PropTypes.string,\n};\n\nTripleVisualizer.defaultProps = {\n  error: '',\n};\n\nexport default TripleVisualizer;\n","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';\nimport IconButton from 'material-ui/IconButton';\nimport Delete from 'material-ui/svg-icons/action/delete';\nimport Snackbar from 'material-ui/Snackbar';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nimport { getDefaultGraph, removeData, removeContextData, getAllDataFrom } from './querybuilder';\nimport TripleVisualizer from './TripleVisualizer';\n\nconst rdfsType = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\nconst dcCreated = 'http://purl.org/dc/terms/created';\nconst dcDescription = 'http://purl.org/dc/terms/description';\nconst dcTitle = 'http://purl.org/dc/terms/title';\n\nclass DataBrowser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphContexts: {},\n      currentSelected: 0,\n      data: [],\n      error: '',\n      snackbar: {\n        open: false,\n        message: 'hi i\\'m a snackbar',\n      },\n      dialog: {\n        open: false,\n      },\n      mounted: true,\n\n    };\n    props.executeQuery(getDefaultGraph(), (err, results) => {\n      if (err) {\n        this.setState({ error: err.message, data: [], headers: [] });\n      } else {\n        const currentstore = {};\n        if (results.length !== 0) {\n          results.forEach((result) => {\n            if (!currentstore[result.subject.value]) {\n              currentstore[result.subject.value] = {};\n            }\n            currentstore[result.subject.value][result.predicate.value] = result.object.value;\n          });\n        }\n        if (this.state.mounted) {\n          this.setState({ graphContexts: currentstore });\n          this.getGraphData(Object.keys(currentstore)[0]);\n        }\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n  getGraphData = (graphname) => {\n    this.props.executeQuery(getAllDataFrom(graphname), (err, result) => {\n      if (err) {\n        this.setState({ error: err.message });\n      } else if (this.state.mounted) {\n        const data = result.map(row => [row.s, row.p, row.o]);\n        if (this.state.mounted) {\n          this.setState({ data });\n        }\n      }\n    });\n  };\n  deleteGraph = (graphname) => {\n    this.props.executeQuery(removeContextData(graphname), (err) => {\n      if (err) {\n        this.setState({ error: err.message });\n      } else {\n        this.props.executeQuery(removeData(graphname), (err2) => {\n          if (err2) {\n            this.setState({ error: err2.message });\n          } else {\n            const snackbar = this.state.snackbar;\n            snackbar.open = true;\n            snackbar.message = 'Graph successfully removed';\n            this.setState({\n              snackbar,\n            });\n          }\n        });\n      }\n    });\n    this.closeDialog();\n  };\n  handleRequestClose = () => {\n    const snackbar = this.state.snackbar;\n    snackbar.open = false;\n    this.setState({\n      snackbar,\n    });\n  };\n  openDialog = row => this.setState({ dialog: { open: true, row } });\n  closeDialog = () => this.setState({ dialog: { open: false, row: -1 } });\n\n\n  changeCurrentGraph = (row, selectedIndex) => {\n    switch (selectedIndex) {\n      case -1:\n        this.setState({ currentSelected: row });\n        this.getGraphData(Object.keys(this.state.graphContexts)[row]);\n        break;\n      case 4:\n        this.openDialog(row);\n        break;\n      default:\n    }\n  };\n\n  renderGraphTable() {\n    return (\n      <Table selectable onCellClick={this.changeCurrentGraph} wrapperStyle={{ maxHeight: '40vh' }} >\n        <TableHeader displaySelectAll={false}>\n          <TableRow>\n            <TableHeaderColumn tooltip=\"the Title\">Title</TableHeaderColumn>\n            <TableHeaderColumn tooltip=\"The description\" >Description</TableHeaderColumn>\n            <TableHeaderColumn tooltip=\"The URI\">URI</TableHeaderColumn>\n            <TableHeaderColumn tooltip=\"The data of creation\">Date</TableHeaderColumn>\n            <TableHeaderColumn tooltip=\"Remove the dataset\">Delete</TableHeaderColumn>\n          </TableRow>\n        </TableHeader>\n        <TableBody\n          onRowSelection={this.changeCurrentGraph}\n          deselectOnClickaway={false}\n          style={{ maxHeight: '20vh' }}\n        >\n          {\n            (Object.keys(this.state.graphContexts).length !== 0) ?\n              Object.keys(this.state.graphContexts).map((key, count) => {\n                const graph = this.state.graphContexts[key];\n                // Limited filtering\n                if (graph[rdfsType] && graph[rdfsType] === 'http://rdfs.org/ns/void#Dataset') {\n                  return (\n                    <TableRow key={graph[dcTitle]} selected={count === this.state.currentSelected}>\n                      <TableRowColumn>{graph[dcTitle]}</TableRowColumn>\n                      <TableRowColumn>{graph[dcDescription]}</TableRowColumn>\n                      <TableRowColumn>{key}</TableRowColumn>\n                      <TableRowColumn>{graph[dcCreated]}</TableRowColumn>\n                      <TableRowColumn><IconButton><Delete /></IconButton></TableRowColumn>\n                    </TableRow>\n                  );\n                }\n                return <space />;\n              }) :\n              <TableRow><TableRowColumn colSpan=\"5\" style={{ textAlign: 'center' }}>No dataset available</TableRowColumn></TableRow>\n          }\n        </TableBody>\n      </Table>\n    );\n  }\n  render() {\n    const dialogActions = [\n      <FlatButton label={'No'} primary onClick={this.closeDialog} />,\n      <FlatButton label={'Yes'} secondary onClick={() => this.deleteGraph(Object.keys(this.state.graphContexts)[this.state.dialog.row])} />,\n    ];\n    return (\n      <div style={{ display: 'flex', maxHeight: 'auto', height: '100%', flexDirection: 'column', overflow: 'hidden', minHeight: 'min-content', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ overflow: 'auto', flex: 1, display: 'flex', alignItems: 'stretch' }}>\n          {this.renderGraphTable()}\n        </div>\n        <div style={{ overflow: 'auto', flex: 1, display: 'flex', alignItems: 'stretch' }}>\n          <TripleVisualizer\n            data={this.state.data}\n            error={this.state.error}\n          />\n        </div>\n        <Snackbar\n          open={this.state.snackbar.open}\n          message={this.state.snackbar.message}\n          autoHideDuration={4000}\n          onRequestClose={this.handleRequestClose}\n        />\n        <Dialog title=\"Are you sure?\" actions={dialogActions} open={this.state.dialog.open}>\n          <p>You are going to delete a dataset!</p>\n          <p><strong>There is no user access control!</strong> </p>\n          <p>Therefore you can accidentally delete SOMEBODY&#39;s else data.</p>\n          <p><strong>Be careful!</strong></p>\n        </Dialog>\n      </div>\n    );\n  }\n}\nDataBrowser.propTypes = {\n  executeQuery: Proptypes.func.isRequired,\n};\n\nexport default DataBrowser;\n\n","// This file contain methods to create queries\n\nfunction getDefaultGraph() {\n  return `SELECT ?subject ?predicate ?object WHERE\n      { GRAPH <http://linkdale.org/metadata>\n      {\n      ?subject ?predicate ?object .\n              ?subject <http://purl.org/dc/terms/created> ?date .\n          }\n      } ORDER BY DESC(?date)`;\n}\nfunction removeData(graphname) {\n  return `CLEAR GRAPH <${graphname}>`;\n}\nfunction removeContextData(graphname) {\n  return `DELETE WHERE { GRAPH <http://linkdale.org/metadata>{ <${graphname}> ?s ?o}}`;\n}\nfunction getAllDataFrom(graphname) {\n  return `SELECT ?s ?p ?o { GRAPH <${graphname}> { ?s ?p ?o } }`;\n}\n\nexport { getDefaultGraph, removeData, removeContextData, getAllDataFrom };\n","import React from 'react';\nimport { Tabs, Tab } from 'material-ui/Tabs';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';\nimport Paper from 'material-ui/Paper';\nimport PropTypes from 'prop-types';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport Download from 'material-ui/svg-icons/file/file-download';\nimport csvStringify from 'csv-stringify';\n\n\nclass SparqlVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      csvData: '',\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      csvStringify(\n        nextProps.data.map(dataRow => (\n          dataRow.map(val => val.value))), (error, output) => {\n          if (!error) {\n            this.setState({ csvData: output });\n          }\n        });\n    }\n  }\n\n\n  render() {\n    const renderErrorBox = this.props.error ? (\n      <Tab label=\"Error\">\n        <Paper>\n          <h1>Something went wrong</h1>\n          {this.props.error}\n        </Paper>\n      </Tab>\n    ) : (null);\n    return (\n      <div>\n        <FloatingActionButton\n          style={{\n            position: 'absolute',\n            bottom: '25px',\n            right: '25px',\n          }}\n          href={`data:'text/plain';charset=utf-8,${encodeURIComponent(\n            this.state.csvData)}`}\n          download={'resultSet.csv'}\n          disabled={this.props.data.length === 0}\n        ><Download /></FloatingActionButton>\n        <Tabs>\n          {renderErrorBox}\n          <Tab label=\"Table\">\n            <Table selectable={false} wrapperStyle={{ maxHeight: '48vh' }}>\n              <TableHeader displaySelectAll={false}>\n                <TableRow>\n                  {this.props.headers.map(header =>\n                    <TableHeaderColumn key={header}>{header}</TableHeaderColumn>)}\n                </TableRow>\n              </TableHeader>\n              <TableBody\n                displayRowCheckbox={false}\n                style={{ maxHeight: '20vh' }}\n                preScanRows={false}\n              >\n                {this.props.data.map(row => (\n                  <TableRow key={row.map(data => data.value)}>\n                    {row.map(data => <TableRowColumn key={data}>{data ? data.value : 'null'}</TableRowColumn>)}\n                  </TableRow>))}\n              </TableBody>\n            </Table>\n          </Tab>\n        </Tabs>\n\n      </div>\n    );\n  }\n}\nSparqlVisualizer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)).isRequired,\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  error: PropTypes.string,\n};\n\nSparqlVisualizer.defaultProps = {\n  error: '',\n};\n\nexport default SparqlVisualizer;\n","import React from 'react';\nimport CodeMirror from 'react-codemirror';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport SelectField from 'material-ui/SelectField';\nimport Divider from 'material-ui/Divider';\nimport MenuItem from 'material-ui/MenuItem';\nimport Play from 'material-ui/svg-icons/av/play-arrow';\nimport PropTypes from 'prop-types';\nimport { CircularProgress } from 'material-ui';\nimport { orangeA200 } from 'material-ui/styles/colors';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sparql/sparql';\nimport 'codemirror/theme/material.css';\nimport SparqlVisualizer from './SparqlVisualizer';\n\nimport { getDefaultGraph } from './querybuilder';\n\nclass QueryWriter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: 'SELECT ?s ?p ?o {?s ?p ?o} LIMIT 100',\n      data: [],\n      graphContexts: [],\n      headers: [],\n      error: '',\n      processing: false,\n    };\n    props.executeQuery(getDefaultGraph(), (err, results) => {\n      if (err) {\n        this.setState({ error: err.message, data: [], headers: [] });\n      } else {\n        const currentstore = {};\n        if (results.length !== 0) {\n          results.forEach((result) => {\n            if (!currentstore[result.subject.value]) {\n              currentstore[result.subject.value] = {};\n            }\n            currentstore[result.subject.value][result.predicate.value] = result.object.value;\n          });\n        }\n        const graphData = Object.keys(currentstore).map(\n          item => ({ name: currentstore[item]['http://purl.org/dc/terms/title'], uri: item }));\n        this.setState({ graphContexts: graphData });\n      }\n    });\n  }\n  onDataSourceChange = (event, index, value) => {\n    this.setState({\n      query: `SELECT ?subject ?predicate ?object WHERE { GRAPH <${value.uri}> {?subject ?predicate ?object}} LIMIT 100`,\n      selectedGraph: value,\n    });\n    this.cm.codeMirror.setValue(`SELECT ?subject ?predicate ?object WHERE { GRAPH <${value.uri}> {?subject ?predicate ?object}} LIMIT 100`);\n  };\n\n  onQueryChange = (query) => {\n    this.setState({ query });\n  };\n\n  onFireQuery = () => {\n    this.setState({ processing: true });\n\n    this.props.executeQuery(\n      this.state.query, this.onQueryCallBack);\n  };\n\n  onQueryCallBack = (err, results) => {\n    if (err) {\n      this.setState({ error: err.message, data: [], headers: [], processing: false });\n    } else if (results.length === 0) {\n      this.setState({ error: '', data: [], headers: [], processing: false });\n    } else {\n      let data = results.map(result => Object.keys(result).map(value => result[value]));\n      const headers = Object.keys(results[0]);\n      data = data.sort(\n        (a, b) =>\n          a[0].value.localeCompare(b[0].value),\n      );\n      this.setState({ data, headers, error: '', processing: false });\n    }\n  };\n  renderProgress = () => {\n    if (this.state.processing) {\n      return (\n        <CircularProgress\n          style={{\n            margin: 'auto',\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%,-50%)',\n          }}\n          size={100}\n          thickness={7}\n          color={orangeA200}\n        />\n      );\n    }\n    return null;\n  };\n\n\n  render() {\n    return (\n      <div style={{ textAlign: 'start' }}>\n        <SelectField\n          floatingLabelText=\"Selected Database\"\n          value={this.state.selectedGraph}\n          onChange={this.onDataSourceChange}\n          style={{ paddingLeft: '12px' }}\n        >\n          {this.state.graphContexts.map(\n            graph =>\n              (<MenuItem\n                key={graph.name}\n                value={graph}\n                primaryText={graph.name}\n                label={graph.name}\n              />))}\n        </SelectField>\n        <Divider />\n        <CodeMirror\n          // eslint-disable-next-line no-return-assign\n          ref={el => this.cm = el}\n          options={{\n            mode: 'sparql',\n            lineNumbers: true,\n            theme: 'material',\n          }}\n          name=\"sparql query editor\"\n          value={this.state.query}\n          onChange={this.onQueryChange}\n        />\n        <FloatingActionButton\n          style={{ right: '40px', top: '100px', position: 'absolute' }}\n          onClick={this.onFireQuery}\n          disabled={this.state.processing}\n        >\n          <Play /></FloatingActionButton>\n        <SparqlVisualizer\n          data={this.state.data}\n          headers={this.state.headers}\n          error={this.state.error}\n        />\n        {this.renderProgress()}\n      </div>\n    );\n  }\n}\n\nexport default QueryWriter;\n\nQueryWriter.propTypes = {\n  executeQuery: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { SparqlClient } from 'sparql-client-2';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport MaterialDrawer from 'material-ui/Drawer/Drawer';\nimport Card from 'material-ui/Card/Card';\n// import CardHeader from 'material-ui/Card/CardHeader';\nimport CardText from 'material-ui/Card/CardText';\nimport AppBar from 'material-ui/AppBar/';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport SparqlJs from 'sparqljs';\nimport Markdown from 'react-markdown';\nimport Play from 'material-ui/svg-icons/av/play-arrow';\nimport Create from 'material-ui/svg-icons/content/create';\nimport Explore from 'material-ui/svg-icons/action/explore';\nimport LightBulb from 'material-ui/svg-icons/action/lightbulb-outline';\nimport Info from 'material-ui/svg-icons/action/info';\nimport { List, ListItem } from 'material-ui/List';\n\nimport {\n  green400,\n  green500,\n  green700,\n  orangeA200,\n} from 'material-ui/styles/colors';\nimport IconButton from 'material-ui/IconButton';\nimport Divider from 'material-ui/Divider';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport DataCreation from './DataCreation';\nimport Tutorialised from './Tutorialised';\nimport DataBrowser from './DataBrowser';\nimport QueryWriter from './QueryWriter';\n\n// import {MdCode,MdSearch,MdCreate,MdBook} from 'react-icons/md';\n// Needed for onTouchTap\n// http://stackoverflow.com/a/34015469/988941\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: green500,\n    primary2Color: green700,\n    primary3Color: green400,\n    accent1Color: orangeA200,\n  },\n});\nconst States = {\n  Welcome: 1,\n  DataCreation: 2,\n  DataBrowsing: 3,\n  Querying: 4,\n  Tutorialise: 5,\n  AboutTool: 6,\n  AboutLD: 7,\n  AboutLODC: 9,\n  AboutLOV: 10,\n};\n\nfunction ImageRenderer(props) {\n    // eslint-disable-next-line alt prop provided by React Markdown renderer\n  return <img {...props} style={{maxWidth:'100%'}}/>\n}\n\nfunction NavigationBar(props) {\n  return (\n    <MaterialDrawer>\n      <Card className=\"home_card\" onClick={() => props.onClick(States.Welcome)}>\n        <CardText>\n          <img src={`${process.env.PUBLIC_URL}/images/linkdale_logo.png`} height={80} alt=\"logo\" />\n          <p>Linked Data Learning Environment</p>\n        </CardText>\n      </Card>\n      <div style={{ textAlign: 'left' }}>\n        <List>\n          <ListItem\n            primaryText={'Create Linked Data'}\n            onClick={() => props.onClick(States.DataCreation)}\n            leftIcon={<Create />}\n          />\n          <ListItem\n            primaryText={'Browse Data'}\n            onClick={() => props.onClick(States.DataBrowsing)}\n            leftIcon={<Explore />}\n          />\n          <ListItem\n            primaryText={'Query Data'}\n            onClick={() => props.onClick(States.Querying)}\n            leftIcon={<Play />}\n          />\n          <ListItem\n            primaryText={'Tutorial'}\n            onClick={() => props.onClick(States.Tutorialise)}\n            leftIcon={<LightBulb />}\n          />\n          <Divider />\n          <ListItem\n            primaryTogglesNestedList\n            primaryText={'About'}\n            leftIcon={<Info />}\n            nestedItems={[\n              <ListItem\n                key=\"Tool\"\n                primaryText={'The tool'}\n                onClick={() => props.onClick(States.AboutTool)}\n\n              />,\n              <ListItem\n                key=\"Linked\"\n                primaryText={'Linked Data'}\n                onClick={() => props.onClick(States.AboutLD)}\n              />,\n              <ListItem\n                key={'LODCloud'}\n                primaryText={'Linked Open Data Cloud'}\n                onClick={() => props.onClick(States.AboutLODC)}\n              />,\n            ]}\n          />\n        </List>\n        <Divider />\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n\n        }}\n      >\n        <Divider />\n        <IconButton\n          iconClassName=\"muidocs-icon-custom-github\"\n          href=\"https://github.com/GerwinBosch/rdf-paqt\"\n        />\n      </div>\n    </MaterialDrawer>\n  );\n}\n\nNavigationBar.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      state: States.Welcome,\n      title: 'Welcome',\n      client: new SparqlClient('https://virtuoso.almere.pilod.nl/sparql'),\n      parser: new SparqlJs.Parser(),\n    };\n  }\n  executeSparql = (call, callBack) => {\n    console.info('call', call);\n    try {\n      this.state.parser.parse(call);\n      this.state.client.query(call).execute((err, results) => {\n        if (err) {\n          if (callBack) {\n            console.error(err)\n            callBack(err, []);\n          }\n        } else if (callBack) {\n          console.info('results', results);\n          callBack('', results.results.bindings);\n        }\n      });\n    } catch (error) {\n      console.error(error) \n      callBack(error, null);\n    }\n  };\n\n  handleClick = (i) => {\n    let title;\n    let link = '';\n    if (this.state === i) {\n      return;\n    }\n    switch (i) {\n      case (States.Welcome) :\n        title = 'Welcome';\n        break;\n      case (States.DataCreation):\n        title = 'Create Linked Data';\n        break;\n      case (States.DataBrowsing):\n        title = 'Browse data';\n        break;\n      case (States.Querying):\n        title = 'Query data';\n        break;\n      case (States.Tutorialise):\n        title = 'Tutorials';\n        break;\n      case (States.AboutTool):\n        title = 'About the tool';\n        link = `${process.env.PUBLIC_URL}/markdown/AboutTool.MD`;\n        break;\n      case (States.AboutLD):\n        title = 'About Linked Data';\n        link = `${process.env.PUBLIC_URL}/markdown/AboutLD.MD`;\n        break;\n      case (States.AboutLODC):\n        title = 'About Linked Open Data Cloud';\n        link = `${process.env.PUBLIC_URL}/markdown/AboutLOD.MD`;\n        break;\n      case (States.AboutLOV):\n        // title = 'About Linked Open Vocabulary';\n        // link = `${process.env.PUBLIC_URL}/markdown/AboutTool.MD`;\n        break;\n      default:\n        title = 'Welcome';\n    }\n    if (link) {\n      fetch(link).then(\n        result => result.text()).then(\n        body => this.setState({\n          markdownText: body,\n        }),\n      );\n    }\n    this.setState({\n      state: i,\n      title,\n    });\n  };\n\n\n  renderContent = () => {\n    switch (this.state.state) {\n      case States.DataCreation:\n        return <DataCreation executeQuery={this.executeSparql} />;\n      case States.DataBrowsing:\n        return <DataBrowser executeQuery={this.executeSparql} />;\n      case States.Querying:\n        return (<QueryWriter\n          executeQuery={this.executeSparql}\n        />);\n      case States.Tutorialise:\n        return <Tutorialised />;\n      // case States.AboutLOV:\n      case States.AboutLODC:\n      case States.AboutTool:\n      case States.AboutLD:\n\n        return (\n          <div style={{ display: 'flex', flexDirection: 'row', padding: '20px' }}>\n            <space style={{ flex: 1 }} />\n            <div style={{ textStyle: 'roboto, sans-serif', textAlign: 'left', flex: 3, maxHeight: '98vh', overflowX: 'none' }}>\n              <Markdown source={this.state.markdownText}\n               renderers = {{image:ImageRenderer}}\n              />\n            </div>\n            <space style={{ flex: 1 }} />\n          </div>\n        );\n      default:\n        return (\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <space style={{ flex: 1 }} />\n            <div style={{ textStyle: 'roboto, sans-serif', textAlign: 'left', flex: 3, width: '50%' }}>\n              <h1 style={{ textAlign: 'center' }}>LinkDaLe</h1>\n              <Markdown source={'is a learning environment where people can learn ' +\n             'basics of Linked Data and WEB of Data. It was created to help people with ' +\n              'limited IT skills to start thinking in graphs. \\n\\n' +\n              'If you have no idea what Linked Data is, start with *About* pages.' +\n              'If you have some knowledge read  *Getting started* tutorials first to learn the interface.\\n\\n' +\n              'In any case you can start right now!' +\n              ''}\n              />\n              <img src={`${process.env.PUBLIC_URL}/images/tut1.png`} alt=\"LinkDaLe\" style={{ width: '100%' }} />\n            </div>\n            <space style={{ flex: 1 }} />\n          </div>\n\n        );\n    }\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={muiTheme}>\n        <div className=\"App\">\n          <NavigationBar\n            onClick={i => this.handleClick(i)}\n          />\n          <div style={{ paddingLeft: 256 }}>\n            <AppBar\n              title={this.state.title}\n              showMenuIconButton={false}\n              // iconClassNameRight=\"muidocs-icon-navigation-expand-more\"\n            />\n            {\n              this.renderContent()\n            }\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}